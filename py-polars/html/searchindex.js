Search.setIndex({docnames:["index","reference/api/polars.DataFrame","reference/api/polars.DataFrame.apply","reference/api/polars.DataFrame.clone","reference/api/polars.DataFrame.columns","reference/api/polars.DataFrame.describe","reference/api/polars.DataFrame.downsample","reference/api/polars.DataFrame.drop","reference/api/polars.DataFrame.drop_duplicates","reference/api/polars.DataFrame.drop_in_place","reference/api/polars.DataFrame.drop_nulls","reference/api/polars.DataFrame.dtypes","reference/api/polars.DataFrame.explode","reference/api/polars.DataFrame.fill_none","reference/api/polars.DataFrame.filter","reference/api/polars.DataFrame.fold","reference/api/polars.DataFrame.frame_equal","reference/api/polars.DataFrame.get_columns","reference/api/polars.DataFrame.groupby","reference/api/polars.DataFrame.hash_rows","reference/api/polars.DataFrame.head","reference/api/polars.DataFrame.height","reference/api/polars.DataFrame.hstack","reference/api/polars.DataFrame.insert_at_idx","reference/api/polars.DataFrame.is_duplicated","reference/api/polars.DataFrame.is_unique","reference/api/polars.DataFrame.join","reference/api/polars.DataFrame.lazy","reference/api/polars.DataFrame.limit","reference/api/polars.DataFrame.max","reference/api/polars.DataFrame.mean","reference/api/polars.DataFrame.median","reference/api/polars.DataFrame.melt","reference/api/polars.DataFrame.min","reference/api/polars.DataFrame.n_chunks","reference/api/polars.DataFrame.null_count","reference/api/polars.DataFrame.pipe","reference/api/polars.DataFrame.quantile","reference/api/polars.DataFrame.rechunk","reference/api/polars.DataFrame.rename","reference/api/polars.DataFrame.replace","reference/api/polars.DataFrame.replace_at_idx","reference/api/polars.DataFrame.row","reference/api/polars.DataFrame.rows","reference/api/polars.DataFrame.sample","reference/api/polars.DataFrame.select","reference/api/polars.DataFrame.select_at_idx","reference/api/polars.DataFrame.shape","reference/api/polars.DataFrame.shift","reference/api/polars.DataFrame.shift_and_fill","reference/api/polars.DataFrame.shrink_to_fit","reference/api/polars.DataFrame.slice","reference/api/polars.DataFrame.sort","reference/api/polars.DataFrame.std","reference/api/polars.DataFrame.sum","reference/api/polars.DataFrame.tail","reference/api/polars.DataFrame.to_arrow","reference/api/polars.DataFrame.to_csv","reference/api/polars.DataFrame.to_dummies","reference/api/polars.DataFrame.to_ipc","reference/api/polars.DataFrame.to_json","reference/api/polars.DataFrame.to_numpy","reference/api/polars.DataFrame.to_pandas","reference/api/polars.DataFrame.to_parquet","reference/api/polars.DataFrame.var","reference/api/polars.DataFrame.vstack","reference/api/polars.DataFrame.width","reference/api/polars.DataFrame.with_column","reference/api/polars.DataFrame.with_columns","reference/api/polars.Expr","reference/api/polars.Expr.agg_groups","reference/api/polars.Expr.alias","reference/api/polars.Expr.apply","reference/api/polars.Expr.arg_sort","reference/api/polars.Expr.arg_unique","reference/api/polars.Expr.backward_fill","reference/api/polars.Expr.cast","reference/api/polars.Expr.count","reference/api/polars.Expr.cum_max","reference/api/polars.Expr.cum_min","reference/api/polars.Expr.cum_sum","reference/api/polars.Expr.dot","reference/api/polars.Expr.drop_nulls","reference/api/polars.Expr.dt","reference/api/polars.Expr.exclude","reference/api/polars.Expr.explode","reference/api/polars.Expr.fill_none","reference/api/polars.Expr.filter","reference/api/polars.Expr.first","reference/api/polars.Expr.forward_fill","reference/api/polars.Expr.hash","reference/api/polars.Expr.head","reference/api/polars.Expr.is_between","reference/api/polars.Expr.is_duplicated","reference/api/polars.Expr.is_finite","reference/api/polars.Expr.is_first","reference/api/polars.Expr.is_in","reference/api/polars.Expr.is_infinite","reference/api/polars.Expr.is_nan","reference/api/polars.Expr.is_not","reference/api/polars.Expr.is_not_nan","reference/api/polars.Expr.is_not_null","reference/api/polars.Expr.is_null","reference/api/polars.Expr.is_unique","reference/api/polars.Expr.keep_name","reference/api/polars.Expr.last","reference/api/polars.Expr.list","reference/api/polars.Expr.map","reference/api/polars.Expr.max","reference/api/polars.Expr.mean","reference/api/polars.Expr.median","reference/api/polars.Expr.min","reference/api/polars.Expr.mode","reference/api/polars.Expr.n_unique","reference/api/polars.Expr.over","reference/api/polars.Expr.pow","reference/api/polars.Expr.quantile","reference/api/polars.Expr.reinterpret","reference/api/polars.Expr.repeat_by","reference/api/polars.Expr.reverse","reference/api/polars.Expr.round","reference/api/polars.Expr.shift","reference/api/polars.Expr.shift_and_fill","reference/api/polars.Expr.slice","reference/api/polars.Expr.sort","reference/api/polars.Expr.sort_by","reference/api/polars.Expr.std","reference/api/polars.Expr.str","reference/api/polars.Expr.sum","reference/api/polars.Expr.tail","reference/api/polars.Expr.take","reference/api/polars.Expr.take_every","reference/api/polars.Expr.unique","reference/api/polars.Expr.var","reference/api/polars.LazyFrame.cache","reference/api/polars.LazyFrame.collect","reference/api/polars.LazyFrame.describe_optimized_plan","reference/api/polars.LazyFrame.describe_plan","reference/api/polars.LazyFrame.drop_column","reference/api/polars.LazyFrame.drop_columns","reference/api/polars.LazyFrame.drop_duplicates","reference/api/polars.LazyFrame.drop_nulls","reference/api/polars.LazyFrame.explode","reference/api/polars.LazyFrame.fetch","reference/api/polars.LazyFrame.fill_none","reference/api/polars.LazyFrame.filter","reference/api/polars.LazyFrame.first","reference/api/polars.LazyFrame.groupby","reference/api/polars.LazyFrame.head","reference/api/polars.LazyFrame.join","reference/api/polars.LazyFrame.last","reference/api/polars.LazyFrame.limit","reference/api/polars.LazyFrame.map","reference/api/polars.LazyFrame.max","reference/api/polars.LazyFrame.mean","reference/api/polars.LazyFrame.median","reference/api/polars.LazyFrame.melt","reference/api/polars.LazyFrame.min","reference/api/polars.LazyFrame.pipe","reference/api/polars.LazyFrame.quantile","reference/api/polars.LazyFrame.reverse","reference/api/polars.LazyFrame.select","reference/api/polars.LazyFrame.shift","reference/api/polars.LazyFrame.shift_and_fill","reference/api/polars.LazyFrame.show_graph","reference/api/polars.LazyFrame.slice","reference/api/polars.LazyFrame.sort","reference/api/polars.LazyFrame.std","reference/api/polars.LazyFrame.sum","reference/api/polars.LazyFrame.tail","reference/api/polars.LazyFrame.var","reference/api/polars.LazyFrame.with_column","reference/api/polars.LazyFrame.with_column_renamed","reference/api/polars.LazyFrame.with_columns","reference/api/polars.Series","reference/api/polars.Series.append","reference/api/polars.Series.apply","reference/api/polars.Series.arg_max","reference/api/polars.Series.arg_min","reference/api/polars.Series.arg_sort","reference/api/polars.Series.arg_true","reference/api/polars.Series.arg_unique","reference/api/polars.Series.argsort","reference/api/polars.Series.cast","reference/api/polars.Series.chunk_lengths","reference/api/polars.Series.clone","reference/api/polars.Series.cum_max","reference/api/polars.Series.cum_min","reference/api/polars.Series.cum_sum","reference/api/polars.Series.describe","reference/api/polars.Series.dot","reference/api/polars.Series.drop_nulls","reference/api/polars.Series.dt","reference/api/polars.Series.dtype","reference/api/polars.Series.explode","reference/api/polars.Series.fill_none","reference/api/polars.Series.filter","reference/api/polars.Series.hash","reference/api/polars.Series.head","reference/api/polars.Series.is_boolean","reference/api/polars.Series.is_duplicated","reference/api/polars.Series.is_finite","reference/api/polars.Series.is_first","reference/api/polars.Series.is_float","reference/api/polars.Series.is_in","reference/api/polars.Series.is_infinite","reference/api/polars.Series.is_nan","reference/api/polars.Series.is_not_nan","reference/api/polars.Series.is_not_null","reference/api/polars.Series.is_null","reference/api/polars.Series.is_numeric","reference/api/polars.Series.is_unique","reference/api/polars.Series.is_utf8","reference/api/polars.Series.len","reference/api/polars.Series.limit","reference/api/polars.Series.max","reference/api/polars.Series.mean","reference/api/polars.Series.median","reference/api/polars.Series.min","reference/api/polars.Series.mode","reference/api/polars.Series.n_chunks","reference/api/polars.Series.n_unique","reference/api/polars.Series.name","reference/api/polars.Series.null_count","reference/api/polars.Series.peak_max","reference/api/polars.Series.peak_min","reference/api/polars.Series.quantile","reference/api/polars.Series.rechunk","reference/api/polars.Series.reinterpret","reference/api/polars.Series.rename","reference/api/polars.Series.rolling_max","reference/api/polars.Series.rolling_mean","reference/api/polars.Series.rolling_min","reference/api/polars.Series.rolling_sum","reference/api/polars.Series.round","reference/api/polars.Series.sample","reference/api/polars.Series.series_equal","reference/api/polars.Series.set","reference/api/polars.Series.set_at_idx","reference/api/polars.Series.shape","reference/api/polars.Series.shift","reference/api/polars.Series.shrink_to_fit","reference/api/polars.Series.slice","reference/api/polars.Series.sort","reference/api/polars.Series.std","reference/api/polars.Series.str","reference/api/polars.Series.sum","reference/api/polars.Series.tail","reference/api/polars.Series.take","reference/api/polars.Series.take_every","reference/api/polars.Series.to_arrow","reference/api/polars.Series.to_frame","reference/api/polars.Series.to_list","reference/api/polars.Series.to_numpy","reference/api/polars.Series.unique","reference/api/polars.Series.value_counts","reference/api/polars.Series.var","reference/api/polars.Series.view","reference/api/polars.Series.zip_with","reference/api/polars.StringCache","reference/api/polars.all","reference/api/polars.any","reference/api/polars.arange","reference/api/polars.arg_where","reference/api/polars.argsort_by","reference/api/polars.avg","reference/api/polars.col","reference/api/polars.concat","reference/api/polars.concat_str","reference/api/polars.count","reference/api/polars.cov","reference/api/polars.eager.frame.GroupBy.agg","reference/api/polars.eager.frame.GroupBy.agg_list","reference/api/polars.eager.frame.GroupBy.apply","reference/api/polars.eager.frame.GroupBy.count","reference/api/polars.eager.frame.GroupBy.first","reference/api/polars.eager.frame.GroupBy.get_group","reference/api/polars.eager.frame.GroupBy.groups","reference/api/polars.eager.frame.GroupBy.head","reference/api/polars.eager.frame.GroupBy.last","reference/api/polars.eager.frame.GroupBy.max","reference/api/polars.eager.frame.GroupBy.mean","reference/api/polars.eager.frame.GroupBy.median","reference/api/polars.eager.frame.GroupBy.min","reference/api/polars.eager.frame.GroupBy.n_unique","reference/api/polars.eager.frame.GroupBy.pivot","reference/api/polars.eager.frame.GroupBy.quantile","reference/api/polars.eager.frame.GroupBy.select","reference/api/polars.eager.frame.GroupBy.select_all","reference/api/polars.eager.frame.GroupBy.sum","reference/api/polars.eager.frame.GroupBy.tail","reference/api/polars.eager.frame.PivotOps.count","reference/api/polars.eager.frame.PivotOps.first","reference/api/polars.eager.frame.PivotOps.max","reference/api/polars.eager.frame.PivotOps.mean","reference/api/polars.eager.frame.PivotOps.median","reference/api/polars.eager.frame.PivotOps.min","reference/api/polars.eager.frame.PivotOps.sum","reference/api/polars.eager.series.DateTimeNameSpace.day","reference/api/polars.eager.series.DateTimeNameSpace.hour","reference/api/polars.eager.series.DateTimeNameSpace.max","reference/api/polars.eager.series.DateTimeNameSpace.mean","reference/api/polars.eager.series.DateTimeNameSpace.median","reference/api/polars.eager.series.DateTimeNameSpace.min","reference/api/polars.eager.series.DateTimeNameSpace.minute","reference/api/polars.eager.series.DateTimeNameSpace.month","reference/api/polars.eager.series.DateTimeNameSpace.nanosecond","reference/api/polars.eager.series.DateTimeNameSpace.ordinal_day","reference/api/polars.eager.series.DateTimeNameSpace.round","reference/api/polars.eager.series.DateTimeNameSpace.second","reference/api/polars.eager.series.DateTimeNameSpace.strftime","reference/api/polars.eager.series.DateTimeNameSpace.timestamp","reference/api/polars.eager.series.DateTimeNameSpace.to_python_datetime","reference/api/polars.eager.series.DateTimeNameSpace.week","reference/api/polars.eager.series.DateTimeNameSpace.weekday","reference/api/polars.eager.series.DateTimeNameSpace.year","reference/api/polars.eager.series.StringNameSpace.contains","reference/api/polars.eager.series.StringNameSpace.json_path_match","reference/api/polars.eager.series.StringNameSpace.lengths","reference/api/polars.eager.series.StringNameSpace.lstrip","reference/api/polars.eager.series.StringNameSpace.replace","reference/api/polars.eager.series.StringNameSpace.replace_all","reference/api/polars.eager.series.StringNameSpace.rstrip","reference/api/polars.eager.series.StringNameSpace.slice","reference/api/polars.eager.series.StringNameSpace.strptime","reference/api/polars.eager.series.StringNameSpace.to_lowercase","reference/api/polars.eager.series.StringNameSpace.to_uppercase","reference/api/polars.first","reference/api/polars.fold","reference/api/polars.from_arrow","reference/api/polars.from_dict","reference/api/polars.from_pandas","reference/api/polars.from_records","reference/api/polars.get_dummies","reference/api/polars.groups","reference/api/polars.head","reference/api/polars.last","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.day","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.hour","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.minute","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.month","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.nanosecond","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.round","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.second","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.strftime","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.year","reference/api/polars.lazy.expr.ExprStringNameSpace.contains","reference/api/polars.lazy.expr.ExprStringNameSpace.json_path_match","reference/api/polars.lazy.expr.ExprStringNameSpace.lengths","reference/api/polars.lazy.expr.ExprStringNameSpace.replace","reference/api/polars.lazy.expr.ExprStringNameSpace.replace_all","reference/api/polars.lazy.expr.ExprStringNameSpace.slice","reference/api/polars.lazy.expr.ExprStringNameSpace.strptime","reference/api/polars.lazy.expr.ExprStringNameSpace.to_lowercase","reference/api/polars.lazy.expr.ExprStringNameSpace.to_uppercase","reference/api/polars.lazy.frame.LazyGroupBy.agg","reference/api/polars.lazy.frame.LazyGroupBy.apply","reference/api/polars.lazy.frame.LazyGroupBy.head","reference/api/polars.lazy.frame.LazyGroupBy.tail","reference/api/polars.lit","reference/api/polars.lit_date","reference/api/polars.map_binary","reference/api/polars.max","reference/api/polars.mean","reference/api/polars.median","reference/api/polars.min","reference/api/polars.n_unique","reference/api/polars.pearson_corr","reference/api/polars.quantile","reference/api/polars.read_csv","reference/api/polars.read_ipc","reference/api/polars.read_json","reference/api/polars.read_parquet","reference/api/polars.read_sql","reference/api/polars.repeat","reference/api/polars.scan_csv","reference/api/polars.scan_parquet","reference/api/polars.std","reference/api/polars.sum","reference/api/polars.tail","reference/api/polars.to_list","reference/api/polars.toggle_string_cache","reference/api/polars.var","reference/api/polars.when","reference/dataframe","reference/expression","reference/functions","reference/index","reference/io","reference/lazyframe","reference/series"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx.ext.todo":2,sphinx:56},filenames:["index.rst","reference/api/polars.DataFrame.rst","reference/api/polars.DataFrame.apply.rst","reference/api/polars.DataFrame.clone.rst","reference/api/polars.DataFrame.columns.rst","reference/api/polars.DataFrame.describe.rst","reference/api/polars.DataFrame.downsample.rst","reference/api/polars.DataFrame.drop.rst","reference/api/polars.DataFrame.drop_duplicates.rst","reference/api/polars.DataFrame.drop_in_place.rst","reference/api/polars.DataFrame.drop_nulls.rst","reference/api/polars.DataFrame.dtypes.rst","reference/api/polars.DataFrame.explode.rst","reference/api/polars.DataFrame.fill_none.rst","reference/api/polars.DataFrame.filter.rst","reference/api/polars.DataFrame.fold.rst","reference/api/polars.DataFrame.frame_equal.rst","reference/api/polars.DataFrame.get_columns.rst","reference/api/polars.DataFrame.groupby.rst","reference/api/polars.DataFrame.hash_rows.rst","reference/api/polars.DataFrame.head.rst","reference/api/polars.DataFrame.height.rst","reference/api/polars.DataFrame.hstack.rst","reference/api/polars.DataFrame.insert_at_idx.rst","reference/api/polars.DataFrame.is_duplicated.rst","reference/api/polars.DataFrame.is_unique.rst","reference/api/polars.DataFrame.join.rst","reference/api/polars.DataFrame.lazy.rst","reference/api/polars.DataFrame.limit.rst","reference/api/polars.DataFrame.max.rst","reference/api/polars.DataFrame.mean.rst","reference/api/polars.DataFrame.median.rst","reference/api/polars.DataFrame.melt.rst","reference/api/polars.DataFrame.min.rst","reference/api/polars.DataFrame.n_chunks.rst","reference/api/polars.DataFrame.null_count.rst","reference/api/polars.DataFrame.pipe.rst","reference/api/polars.DataFrame.quantile.rst","reference/api/polars.DataFrame.rechunk.rst","reference/api/polars.DataFrame.rename.rst","reference/api/polars.DataFrame.replace.rst","reference/api/polars.DataFrame.replace_at_idx.rst","reference/api/polars.DataFrame.row.rst","reference/api/polars.DataFrame.rows.rst","reference/api/polars.DataFrame.sample.rst","reference/api/polars.DataFrame.select.rst","reference/api/polars.DataFrame.select_at_idx.rst","reference/api/polars.DataFrame.shape.rst","reference/api/polars.DataFrame.shift.rst","reference/api/polars.DataFrame.shift_and_fill.rst","reference/api/polars.DataFrame.shrink_to_fit.rst","reference/api/polars.DataFrame.slice.rst","reference/api/polars.DataFrame.sort.rst","reference/api/polars.DataFrame.std.rst","reference/api/polars.DataFrame.sum.rst","reference/api/polars.DataFrame.tail.rst","reference/api/polars.DataFrame.to_arrow.rst","reference/api/polars.DataFrame.to_csv.rst","reference/api/polars.DataFrame.to_dummies.rst","reference/api/polars.DataFrame.to_ipc.rst","reference/api/polars.DataFrame.to_json.rst","reference/api/polars.DataFrame.to_numpy.rst","reference/api/polars.DataFrame.to_pandas.rst","reference/api/polars.DataFrame.to_parquet.rst","reference/api/polars.DataFrame.var.rst","reference/api/polars.DataFrame.vstack.rst","reference/api/polars.DataFrame.width.rst","reference/api/polars.DataFrame.with_column.rst","reference/api/polars.DataFrame.with_columns.rst","reference/api/polars.Expr.rst","reference/api/polars.Expr.agg_groups.rst","reference/api/polars.Expr.alias.rst","reference/api/polars.Expr.apply.rst","reference/api/polars.Expr.arg_sort.rst","reference/api/polars.Expr.arg_unique.rst","reference/api/polars.Expr.backward_fill.rst","reference/api/polars.Expr.cast.rst","reference/api/polars.Expr.count.rst","reference/api/polars.Expr.cum_max.rst","reference/api/polars.Expr.cum_min.rst","reference/api/polars.Expr.cum_sum.rst","reference/api/polars.Expr.dot.rst","reference/api/polars.Expr.drop_nulls.rst","reference/api/polars.Expr.dt.rst","reference/api/polars.Expr.exclude.rst","reference/api/polars.Expr.explode.rst","reference/api/polars.Expr.fill_none.rst","reference/api/polars.Expr.filter.rst","reference/api/polars.Expr.first.rst","reference/api/polars.Expr.forward_fill.rst","reference/api/polars.Expr.hash.rst","reference/api/polars.Expr.head.rst","reference/api/polars.Expr.is_between.rst","reference/api/polars.Expr.is_duplicated.rst","reference/api/polars.Expr.is_finite.rst","reference/api/polars.Expr.is_first.rst","reference/api/polars.Expr.is_in.rst","reference/api/polars.Expr.is_infinite.rst","reference/api/polars.Expr.is_nan.rst","reference/api/polars.Expr.is_not.rst","reference/api/polars.Expr.is_not_nan.rst","reference/api/polars.Expr.is_not_null.rst","reference/api/polars.Expr.is_null.rst","reference/api/polars.Expr.is_unique.rst","reference/api/polars.Expr.keep_name.rst","reference/api/polars.Expr.last.rst","reference/api/polars.Expr.list.rst","reference/api/polars.Expr.map.rst","reference/api/polars.Expr.max.rst","reference/api/polars.Expr.mean.rst","reference/api/polars.Expr.median.rst","reference/api/polars.Expr.min.rst","reference/api/polars.Expr.mode.rst","reference/api/polars.Expr.n_unique.rst","reference/api/polars.Expr.over.rst","reference/api/polars.Expr.pow.rst","reference/api/polars.Expr.quantile.rst","reference/api/polars.Expr.reinterpret.rst","reference/api/polars.Expr.repeat_by.rst","reference/api/polars.Expr.reverse.rst","reference/api/polars.Expr.round.rst","reference/api/polars.Expr.shift.rst","reference/api/polars.Expr.shift_and_fill.rst","reference/api/polars.Expr.slice.rst","reference/api/polars.Expr.sort.rst","reference/api/polars.Expr.sort_by.rst","reference/api/polars.Expr.std.rst","reference/api/polars.Expr.str.rst","reference/api/polars.Expr.sum.rst","reference/api/polars.Expr.tail.rst","reference/api/polars.Expr.take.rst","reference/api/polars.Expr.take_every.rst","reference/api/polars.Expr.unique.rst","reference/api/polars.Expr.var.rst","reference/api/polars.LazyFrame.cache.rst","reference/api/polars.LazyFrame.collect.rst","reference/api/polars.LazyFrame.describe_optimized_plan.rst","reference/api/polars.LazyFrame.describe_plan.rst","reference/api/polars.LazyFrame.drop_column.rst","reference/api/polars.LazyFrame.drop_columns.rst","reference/api/polars.LazyFrame.drop_duplicates.rst","reference/api/polars.LazyFrame.drop_nulls.rst","reference/api/polars.LazyFrame.explode.rst","reference/api/polars.LazyFrame.fetch.rst","reference/api/polars.LazyFrame.fill_none.rst","reference/api/polars.LazyFrame.filter.rst","reference/api/polars.LazyFrame.first.rst","reference/api/polars.LazyFrame.groupby.rst","reference/api/polars.LazyFrame.head.rst","reference/api/polars.LazyFrame.join.rst","reference/api/polars.LazyFrame.last.rst","reference/api/polars.LazyFrame.limit.rst","reference/api/polars.LazyFrame.map.rst","reference/api/polars.LazyFrame.max.rst","reference/api/polars.LazyFrame.mean.rst","reference/api/polars.LazyFrame.median.rst","reference/api/polars.LazyFrame.melt.rst","reference/api/polars.LazyFrame.min.rst","reference/api/polars.LazyFrame.pipe.rst","reference/api/polars.LazyFrame.quantile.rst","reference/api/polars.LazyFrame.reverse.rst","reference/api/polars.LazyFrame.select.rst","reference/api/polars.LazyFrame.shift.rst","reference/api/polars.LazyFrame.shift_and_fill.rst","reference/api/polars.LazyFrame.show_graph.rst","reference/api/polars.LazyFrame.slice.rst","reference/api/polars.LazyFrame.sort.rst","reference/api/polars.LazyFrame.std.rst","reference/api/polars.LazyFrame.sum.rst","reference/api/polars.LazyFrame.tail.rst","reference/api/polars.LazyFrame.var.rst","reference/api/polars.LazyFrame.with_column.rst","reference/api/polars.LazyFrame.with_column_renamed.rst","reference/api/polars.LazyFrame.with_columns.rst","reference/api/polars.Series.rst","reference/api/polars.Series.append.rst","reference/api/polars.Series.apply.rst","reference/api/polars.Series.arg_max.rst","reference/api/polars.Series.arg_min.rst","reference/api/polars.Series.arg_sort.rst","reference/api/polars.Series.arg_true.rst","reference/api/polars.Series.arg_unique.rst","reference/api/polars.Series.argsort.rst","reference/api/polars.Series.cast.rst","reference/api/polars.Series.chunk_lengths.rst","reference/api/polars.Series.clone.rst","reference/api/polars.Series.cum_max.rst","reference/api/polars.Series.cum_min.rst","reference/api/polars.Series.cum_sum.rst","reference/api/polars.Series.describe.rst","reference/api/polars.Series.dot.rst","reference/api/polars.Series.drop_nulls.rst","reference/api/polars.Series.dt.rst","reference/api/polars.Series.dtype.rst","reference/api/polars.Series.explode.rst","reference/api/polars.Series.fill_none.rst","reference/api/polars.Series.filter.rst","reference/api/polars.Series.hash.rst","reference/api/polars.Series.head.rst","reference/api/polars.Series.is_boolean.rst","reference/api/polars.Series.is_duplicated.rst","reference/api/polars.Series.is_finite.rst","reference/api/polars.Series.is_first.rst","reference/api/polars.Series.is_float.rst","reference/api/polars.Series.is_in.rst","reference/api/polars.Series.is_infinite.rst","reference/api/polars.Series.is_nan.rst","reference/api/polars.Series.is_not_nan.rst","reference/api/polars.Series.is_not_null.rst","reference/api/polars.Series.is_null.rst","reference/api/polars.Series.is_numeric.rst","reference/api/polars.Series.is_unique.rst","reference/api/polars.Series.is_utf8.rst","reference/api/polars.Series.len.rst","reference/api/polars.Series.limit.rst","reference/api/polars.Series.max.rst","reference/api/polars.Series.mean.rst","reference/api/polars.Series.median.rst","reference/api/polars.Series.min.rst","reference/api/polars.Series.mode.rst","reference/api/polars.Series.n_chunks.rst","reference/api/polars.Series.n_unique.rst","reference/api/polars.Series.name.rst","reference/api/polars.Series.null_count.rst","reference/api/polars.Series.peak_max.rst","reference/api/polars.Series.peak_min.rst","reference/api/polars.Series.quantile.rst","reference/api/polars.Series.rechunk.rst","reference/api/polars.Series.reinterpret.rst","reference/api/polars.Series.rename.rst","reference/api/polars.Series.rolling_max.rst","reference/api/polars.Series.rolling_mean.rst","reference/api/polars.Series.rolling_min.rst","reference/api/polars.Series.rolling_sum.rst","reference/api/polars.Series.round.rst","reference/api/polars.Series.sample.rst","reference/api/polars.Series.series_equal.rst","reference/api/polars.Series.set.rst","reference/api/polars.Series.set_at_idx.rst","reference/api/polars.Series.shape.rst","reference/api/polars.Series.shift.rst","reference/api/polars.Series.shrink_to_fit.rst","reference/api/polars.Series.slice.rst","reference/api/polars.Series.sort.rst","reference/api/polars.Series.std.rst","reference/api/polars.Series.str.rst","reference/api/polars.Series.sum.rst","reference/api/polars.Series.tail.rst","reference/api/polars.Series.take.rst","reference/api/polars.Series.take_every.rst","reference/api/polars.Series.to_arrow.rst","reference/api/polars.Series.to_frame.rst","reference/api/polars.Series.to_list.rst","reference/api/polars.Series.to_numpy.rst","reference/api/polars.Series.unique.rst","reference/api/polars.Series.value_counts.rst","reference/api/polars.Series.var.rst","reference/api/polars.Series.view.rst","reference/api/polars.Series.zip_with.rst","reference/api/polars.StringCache.rst","reference/api/polars.all.rst","reference/api/polars.any.rst","reference/api/polars.arange.rst","reference/api/polars.arg_where.rst","reference/api/polars.argsort_by.rst","reference/api/polars.avg.rst","reference/api/polars.col.rst","reference/api/polars.concat.rst","reference/api/polars.concat_str.rst","reference/api/polars.count.rst","reference/api/polars.cov.rst","reference/api/polars.eager.frame.GroupBy.agg.rst","reference/api/polars.eager.frame.GroupBy.agg_list.rst","reference/api/polars.eager.frame.GroupBy.apply.rst","reference/api/polars.eager.frame.GroupBy.count.rst","reference/api/polars.eager.frame.GroupBy.first.rst","reference/api/polars.eager.frame.GroupBy.get_group.rst","reference/api/polars.eager.frame.GroupBy.groups.rst","reference/api/polars.eager.frame.GroupBy.head.rst","reference/api/polars.eager.frame.GroupBy.last.rst","reference/api/polars.eager.frame.GroupBy.max.rst","reference/api/polars.eager.frame.GroupBy.mean.rst","reference/api/polars.eager.frame.GroupBy.median.rst","reference/api/polars.eager.frame.GroupBy.min.rst","reference/api/polars.eager.frame.GroupBy.n_unique.rst","reference/api/polars.eager.frame.GroupBy.pivot.rst","reference/api/polars.eager.frame.GroupBy.quantile.rst","reference/api/polars.eager.frame.GroupBy.select.rst","reference/api/polars.eager.frame.GroupBy.select_all.rst","reference/api/polars.eager.frame.GroupBy.sum.rst","reference/api/polars.eager.frame.GroupBy.tail.rst","reference/api/polars.eager.frame.PivotOps.count.rst","reference/api/polars.eager.frame.PivotOps.first.rst","reference/api/polars.eager.frame.PivotOps.max.rst","reference/api/polars.eager.frame.PivotOps.mean.rst","reference/api/polars.eager.frame.PivotOps.median.rst","reference/api/polars.eager.frame.PivotOps.min.rst","reference/api/polars.eager.frame.PivotOps.sum.rst","reference/api/polars.eager.series.DateTimeNameSpace.day.rst","reference/api/polars.eager.series.DateTimeNameSpace.hour.rst","reference/api/polars.eager.series.DateTimeNameSpace.max.rst","reference/api/polars.eager.series.DateTimeNameSpace.mean.rst","reference/api/polars.eager.series.DateTimeNameSpace.median.rst","reference/api/polars.eager.series.DateTimeNameSpace.min.rst","reference/api/polars.eager.series.DateTimeNameSpace.minute.rst","reference/api/polars.eager.series.DateTimeNameSpace.month.rst","reference/api/polars.eager.series.DateTimeNameSpace.nanosecond.rst","reference/api/polars.eager.series.DateTimeNameSpace.ordinal_day.rst","reference/api/polars.eager.series.DateTimeNameSpace.round.rst","reference/api/polars.eager.series.DateTimeNameSpace.second.rst","reference/api/polars.eager.series.DateTimeNameSpace.strftime.rst","reference/api/polars.eager.series.DateTimeNameSpace.timestamp.rst","reference/api/polars.eager.series.DateTimeNameSpace.to_python_datetime.rst","reference/api/polars.eager.series.DateTimeNameSpace.week.rst","reference/api/polars.eager.series.DateTimeNameSpace.weekday.rst","reference/api/polars.eager.series.DateTimeNameSpace.year.rst","reference/api/polars.eager.series.StringNameSpace.contains.rst","reference/api/polars.eager.series.StringNameSpace.json_path_match.rst","reference/api/polars.eager.series.StringNameSpace.lengths.rst","reference/api/polars.eager.series.StringNameSpace.lstrip.rst","reference/api/polars.eager.series.StringNameSpace.replace.rst","reference/api/polars.eager.series.StringNameSpace.replace_all.rst","reference/api/polars.eager.series.StringNameSpace.rstrip.rst","reference/api/polars.eager.series.StringNameSpace.slice.rst","reference/api/polars.eager.series.StringNameSpace.strptime.rst","reference/api/polars.eager.series.StringNameSpace.to_lowercase.rst","reference/api/polars.eager.series.StringNameSpace.to_uppercase.rst","reference/api/polars.first.rst","reference/api/polars.fold.rst","reference/api/polars.from_arrow.rst","reference/api/polars.from_dict.rst","reference/api/polars.from_pandas.rst","reference/api/polars.from_records.rst","reference/api/polars.get_dummies.rst","reference/api/polars.groups.rst","reference/api/polars.head.rst","reference/api/polars.last.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.day.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.hour.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.minute.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.month.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.nanosecond.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.round.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.second.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.strftime.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.year.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.contains.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.json_path_match.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.lengths.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.replace.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.replace_all.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.slice.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.strptime.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.to_lowercase.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.to_uppercase.rst","reference/api/polars.lazy.frame.LazyGroupBy.agg.rst","reference/api/polars.lazy.frame.LazyGroupBy.apply.rst","reference/api/polars.lazy.frame.LazyGroupBy.head.rst","reference/api/polars.lazy.frame.LazyGroupBy.tail.rst","reference/api/polars.lit.rst","reference/api/polars.lit_date.rst","reference/api/polars.map_binary.rst","reference/api/polars.max.rst","reference/api/polars.mean.rst","reference/api/polars.median.rst","reference/api/polars.min.rst","reference/api/polars.n_unique.rst","reference/api/polars.pearson_corr.rst","reference/api/polars.quantile.rst","reference/api/polars.read_csv.rst","reference/api/polars.read_ipc.rst","reference/api/polars.read_json.rst","reference/api/polars.read_parquet.rst","reference/api/polars.read_sql.rst","reference/api/polars.repeat.rst","reference/api/polars.scan_csv.rst","reference/api/polars.scan_parquet.rst","reference/api/polars.std.rst","reference/api/polars.sum.rst","reference/api/polars.tail.rst","reference/api/polars.to_list.rst","reference/api/polars.toggle_string_cache.rst","reference/api/polars.var.rst","reference/api/polars.when.rst","reference/dataframe.rst","reference/expression.rst","reference/functions.rst","reference/index.rst","reference/io.rst","reference/lazyframe.rst","reference/series.rst"],objects:{"polars.DataFrame":{"var":[64,1,1,""],__init__:[1,1,1,""],apply:[2,1,1,""],clone:[3,1,1,""],columns:[4,2,1,""],describe:[5,1,1,""],downsample:[6,1,1,""],drop:[7,1,1,""],drop_duplicates:[8,1,1,""],drop_in_place:[9,1,1,""],drop_nulls:[10,1,1,""],dtypes:[11,2,1,""],explode:[12,1,1,""],fill_none:[13,1,1,""],filter:[14,1,1,""],fold:[15,1,1,""],frame_equal:[16,1,1,""],get_columns:[17,1,1,""],groupby:[18,1,1,""],hash_rows:[19,1,1,""],head:[20,1,1,""],height:[21,2,1,""],hstack:[22,1,1,""],insert_at_idx:[23,1,1,""],is_duplicated:[24,1,1,""],is_unique:[25,1,1,""],join:[26,1,1,""],lazy:[27,1,1,""],limit:[28,1,1,""],max:[29,1,1,""],mean:[30,1,1,""],median:[31,1,1,""],melt:[32,1,1,""],min:[33,1,1,""],n_chunks:[34,1,1,""],null_count:[35,1,1,""],pipe:[36,1,1,""],quantile:[37,1,1,""],rechunk:[38,1,1,""],rename:[39,1,1,""],replace:[40,1,1,""],replace_at_idx:[41,1,1,""],row:[42,1,1,""],rows:[43,1,1,""],sample:[44,1,1,""],select:[45,1,1,""],select_at_idx:[46,1,1,""],shape:[47,2,1,""],shift:[48,1,1,""],shift_and_fill:[49,1,1,""],shrink_to_fit:[50,1,1,""],slice:[51,1,1,""],sort:[52,1,1,""],std:[53,1,1,""],sum:[54,1,1,""],tail:[55,1,1,""],to_arrow:[56,1,1,""],to_csv:[57,1,1,""],to_dummies:[58,1,1,""],to_ipc:[59,1,1,""],to_json:[60,1,1,""],to_numpy:[61,1,1,""],to_pandas:[62,1,1,""],to_parquet:[63,1,1,""],vstack:[65,1,1,""],width:[66,2,1,""],with_column:[67,1,1,""],with_columns:[68,1,1,""]},"polars.Expr":{"var":[133,1,1,""],__init__:[69,1,1,""],agg_groups:[70,1,1,""],alias:[71,1,1,""],apply:[72,1,1,""],arg_sort:[73,1,1,""],arg_unique:[74,1,1,""],backward_fill:[75,1,1,""],cast:[76,1,1,""],count:[77,1,1,""],cum_max:[78,1,1,""],cum_min:[79,1,1,""],cum_sum:[80,1,1,""],dot:[81,1,1,""],drop_nulls:[82,1,1,""],dt:[83,2,1,""],exclude:[84,1,1,""],explode:[85,1,1,""],fill_none:[86,1,1,""],filter:[87,1,1,""],first:[88,1,1,""],forward_fill:[89,1,1,""],hash:[90,1,1,""],head:[91,1,1,""],is_between:[92,1,1,""],is_duplicated:[93,1,1,""],is_finite:[94,1,1,""],is_first:[95,1,1,""],is_in:[96,1,1,""],is_infinite:[97,1,1,""],is_nan:[98,1,1,""],is_not:[99,1,1,""],is_not_nan:[100,1,1,""],is_not_null:[101,1,1,""],is_null:[102,1,1,""],is_unique:[103,1,1,""],keep_name:[104,1,1,""],last:[105,1,1,""],list:[106,1,1,""],map:[107,1,1,""],max:[108,1,1,""],mean:[109,1,1,""],median:[110,1,1,""],min:[111,1,1,""],mode:[112,1,1,""],n_unique:[113,1,1,""],over:[114,1,1,""],pow:[115,1,1,""],quantile:[116,1,1,""],reinterpret:[117,1,1,""],repeat_by:[118,1,1,""],reverse:[119,1,1,""],round:[120,1,1,""],shift:[121,1,1,""],shift_and_fill:[122,1,1,""],slice:[123,1,1,""],sort:[124,1,1,""],sort_by:[125,1,1,""],std:[126,1,1,""],str:[127,2,1,""],sum:[128,1,1,""],tail:[129,1,1,""],take:[130,1,1,""],take_every:[131,1,1,""],unique:[132,1,1,""]},"polars.LazyFrame":{"var":[170,1,1,""],cache:[134,1,1,""],collect:[135,1,1,""],describe_optimized_plan:[136,1,1,""],describe_plan:[137,1,1,""],drop_column:[138,1,1,""],drop_columns:[139,1,1,""],drop_duplicates:[140,1,1,""],drop_nulls:[141,1,1,""],explode:[142,1,1,""],fetch:[143,1,1,""],fill_none:[144,1,1,""],filter:[145,1,1,""],first:[146,1,1,""],groupby:[147,1,1,""],head:[148,1,1,""],join:[149,1,1,""],last:[150,1,1,""],limit:[151,1,1,""],map:[152,1,1,""],max:[153,1,1,""],mean:[154,1,1,""],median:[155,1,1,""],melt:[156,1,1,""],min:[157,1,1,""],pipe:[158,1,1,""],quantile:[159,1,1,""],reverse:[160,1,1,""],select:[161,1,1,""],shift:[162,1,1,""],shift_and_fill:[163,1,1,""],show_graph:[164,1,1,""],slice:[165,1,1,""],sort:[166,1,1,""],std:[167,1,1,""],sum:[168,1,1,""],tail:[169,1,1,""],with_column:[171,1,1,""],with_column_renamed:[172,1,1,""],with_columns:[173,1,1,""]},"polars.Series":{"var":[256,1,1,""],__init__:[174,1,1,""],append:[175,1,1,""],apply:[176,1,1,""],arg_max:[177,1,1,""],arg_min:[178,1,1,""],arg_sort:[179,1,1,""],arg_true:[180,1,1,""],arg_unique:[181,1,1,""],argsort:[182,1,1,""],cast:[183,1,1,""],chunk_lengths:[184,1,1,""],clone:[185,1,1,""],cum_max:[186,1,1,""],cum_min:[187,1,1,""],cum_sum:[188,1,1,""],describe:[189,1,1,""],dot:[190,1,1,""],drop_nulls:[191,1,1,""],dt:[192,2,1,""],dtype:[193,2,1,""],explode:[194,1,1,""],fill_none:[195,1,1,""],filter:[196,1,1,""],hash:[197,1,1,""],head:[198,1,1,""],is_boolean:[199,1,1,""],is_duplicated:[200,1,1,""],is_finite:[201,1,1,""],is_first:[202,1,1,""],is_float:[203,1,1,""],is_in:[204,1,1,""],is_infinite:[205,1,1,""],is_nan:[206,1,1,""],is_not_nan:[207,1,1,""],is_not_null:[208,1,1,""],is_null:[209,1,1,""],is_numeric:[210,1,1,""],is_unique:[211,1,1,""],is_utf8:[212,1,1,""],len:[213,1,1,""],limit:[214,1,1,""],max:[215,1,1,""],mean:[216,1,1,""],median:[217,1,1,""],min:[218,1,1,""],mode:[219,1,1,""],n_chunks:[220,1,1,""],n_unique:[221,1,1,""],name:[222,2,1,""],null_count:[223,1,1,""],peak_max:[224,1,1,""],peak_min:[225,1,1,""],quantile:[226,1,1,""],rechunk:[227,1,1,""],reinterpret:[228,1,1,""],rename:[229,1,1,""],rolling_max:[230,1,1,""],rolling_mean:[231,1,1,""],rolling_min:[232,1,1,""],rolling_sum:[233,1,1,""],round:[234,1,1,""],sample:[235,1,1,""],series_equal:[236,1,1,""],set:[237,1,1,""],set_at_idx:[238,1,1,""],shape:[239,2,1,""],shift:[240,1,1,""],shrink_to_fit:[241,1,1,""],slice:[242,1,1,""],sort:[243,1,1,""],std:[244,1,1,""],str:[245,2,1,""],sum:[246,1,1,""],tail:[247,1,1,""],take:[248,1,1,""],take_every:[249,1,1,""],to_arrow:[250,1,1,""],to_frame:[251,1,1,""],to_list:[252,1,1,""],to_numpy:[253,1,1,""],unique:[254,1,1,""],value_counts:[255,1,1,""],view:[257,1,1,""],zip_with:[258,1,1,""]},"polars.StringCache":{__init__:[259,1,1,""]},"polars.eager.frame.GroupBy":{agg:[271,1,1,""],agg_list:[272,1,1,""],apply:[273,1,1,""],count:[274,1,1,""],first:[275,1,1,""],get_group:[276,1,1,""],groups:[277,1,1,""],head:[278,1,1,""],last:[279,1,1,""],max:[280,1,1,""],mean:[281,1,1,""],median:[282,1,1,""],min:[283,1,1,""],n_unique:[284,1,1,""],pivot:[285,1,1,""],quantile:[286,1,1,""],select:[287,1,1,""],select_all:[288,1,1,""],sum:[289,1,1,""],tail:[290,1,1,""]},"polars.eager.frame.PivotOps":{count:[291,1,1,""],first:[292,1,1,""],max:[293,1,1,""],mean:[294,1,1,""],median:[295,1,1,""],min:[296,1,1,""],sum:[297,1,1,""]},"polars.eager.series.DateTimeNameSpace":{day:[298,1,1,""],hour:[299,1,1,""],max:[300,1,1,""],mean:[301,1,1,""],median:[302,1,1,""],min:[303,1,1,""],minute:[304,1,1,""],month:[305,1,1,""],nanosecond:[306,1,1,""],ordinal_day:[307,1,1,""],round:[308,1,1,""],second:[309,1,1,""],strftime:[310,1,1,""],timestamp:[311,1,1,""],to_python_datetime:[312,1,1,""],week:[313,1,1,""],weekday:[314,1,1,""],year:[315,1,1,""]},"polars.eager.series.StringNameSpace":{contains:[316,1,1,""],json_path_match:[317,1,1,""],lengths:[318,1,1,""],lstrip:[319,1,1,""],replace:[320,1,1,""],replace_all:[321,1,1,""],rstrip:[322,1,1,""],slice:[323,1,1,""],strptime:[324,1,1,""],to_lowercase:[325,1,1,""],to_uppercase:[326,1,1,""]},"polars.lazy.expr.ExprDateTimeNameSpace":{day:[337,1,1,""],hour:[338,1,1,""],minute:[339,1,1,""],month:[340,1,1,""],nanosecond:[341,1,1,""],ordinal_day:[342,1,1,""],round:[343,1,1,""],second:[344,1,1,""],strftime:[345,1,1,""],year:[346,1,1,""]},"polars.lazy.expr.ExprStringNameSpace":{contains:[347,1,1,""],json_path_match:[348,1,1,""],lengths:[349,1,1,""],replace:[350,1,1,""],replace_all:[351,1,1,""],slice:[352,1,1,""],strptime:[353,1,1,""],to_lowercase:[354,1,1,""],to_uppercase:[355,1,1,""]},"polars.lazy.frame.LazyGroupBy":{agg:[356,1,1,""],apply:[357,1,1,""],head:[358,1,1,""],tail:[359,1,1,""]},polars:{"var":[383,3,1,""],DataFrame:[1,0,1,""],Expr:[69,0,1,""],Series:[174,0,1,""],StringCache:[259,0,1,""],all:[260,3,1,""],any:[261,3,1,""],arange:[262,3,1,""],arg_where:[263,3,1,""],argsort_by:[264,3,1,""],avg:[265,3,1,""],col:[266,3,1,""],concat:[267,3,1,""],concat_str:[268,3,1,""],count:[269,3,1,""],cov:[270,3,1,""],first:[327,3,1,""],fold:[328,3,1,""],from_arrow:[329,3,1,""],from_dict:[330,3,1,""],from_pandas:[331,3,1,""],from_records:[332,3,1,""],get_dummies:[333,3,1,""],groups:[334,3,1,""],head:[335,3,1,""],last:[336,3,1,""],lit:[360,3,1,""],lit_date:[361,3,1,""],map_binary:[362,3,1,""],max:[363,3,1,""],mean:[364,3,1,""],median:[365,3,1,""],min:[366,3,1,""],n_unique:[367,3,1,""],pearson_corr:[368,3,1,""],quantile:[369,3,1,""],read_csv:[370,3,1,""],read_ipc:[371,3,1,""],read_json:[372,3,1,""],read_parquet:[373,3,1,""],read_sql:[374,3,1,""],repeat:[375,3,1,""],scan_csv:[376,3,1,""],scan_parquet:[377,3,1,""],std:[378,3,1,""],sum:[379,3,1,""],tail:[380,3,1,""],to_list:[381,3,1,""],toggle_string_cache:[382,3,1,""],when:[384,3,1,""]}},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","property","Python property"],"3":["py","function","Python function"]},objtypes:{"0":"py:class","1":"py:method","2":"py:property","3":"py:function"},terms:{"0":[5,7,11,15,16,19,26,29,30,33,44,52,54,90,164,189,197,235,262,287,288,299,304,309,314,324,328,338,339,344,345,370,374,376],"000":[306,341],"1":[1,4,5,7,11,12,15,16,18,19,20,21,26,44,47,52,55,57,61,62,66,71,72,84,90,99,104,114,142,174,189,197,235,244,256,257,262,278,290,298,305,306,307,313,317,329,330,331,332,337,340,341,342,348,358,359,360,384],"10":[20,55,57,214,374],"100":[262,370],"102":5,"11":18,"12":[164,305,340],"13":[12,114,142],"15":[6,114,189,308,343],"16":[114,164,287,288],"19":[324,345],"2":[1,4,5,7,11,12,15,16,18,19,20,21,26,47,52,55,57,61,62,66,71,72,84,90,99,104,114,142,174,189,197,257,278,290,317,329,330,331,332,348,358,359,360,374,384],"20":360,"2021":360,"23":[299,338],"233":15,"267":5,"2d":61,"3":[1,4,5,7,11,12,15,16,18,19,20,21,26,47,52,55,57,61,62,66,71,72,84,90,99,104,114,142,174,189,197,257,278,290,329,330,331,332,358,359,360],"31":[298,337],"366":[307,342],"4":[1,5,12,15,18,20,21,26,47,55,57,66,114,142,189,271,278,290,324,329,330,331,332,345,358,359,384],"4142135623730951":189,"5":[1,5,6,12,15,18,20,21,28,47,55,57,66,114,142,189,257,278,290,308,317,329,331,332,343,348,358,359],"500":143,"53":313,"59":[304,309,339,344],"6":[1,4,5,7,11,12,16,18,20,26,52,55,57,61,62,114,142,278,290,314,329,331,332,358,359],"64bit":[117,228],"7":[4,7,11,16,20,26,52,55,57,61,62,114],"8":[4,5,7,11,16,20,26,52,55,57,61,62,114,287,288],"8192":370,"9":[15,20,55,57,114],"999":[306,341],"boolean":[14,87,94,95,96,97,98,99,100,101,102,145,180,196,199,200,201,202,204,205,206,207,208,209,211,224,225,237,258,263,316,388],"byte":[370,371,373],"case":257,"class":[1,69,174,259,388],"default":[1,174,244,256,264,329,330,331,332,370],"do":[56,135,253,257,285],"final":[143,267],"float":[37,44,49,86,115,116,120,159,163,164,186,187,188,189,190,201,203,205,206,207,215,216,217,218,226,230,231,232,233,234,235,237,238,244,246,256,265,286,360,364,365,369,375,378,383],"function":[0,2,15,36,72,107,114,152,158,176,257,271,273,285,328,357,362,370,388],"import":[62,152],"int":[6,19,20,21,23,28,29,30,33,34,41,42,44,46,47,48,49,51,54,55,66,86,90,91,120,121,122,123,129,131,143,144,148,151,162,163,165,169,177,178,184,186,187,188,189,197,198,213,214,215,216,218,220,221,223,230,231,232,233,234,235,237,238,239,240,242,244,246,247,248,249,256,262,269,278,290,308,323,335,343,352,358,359,360,365,367,370,373,374,375,376,377,380],"long":[12,32,142,156],"new":[7,10,22,23,35,39,40,67,71,85,131,176,191,194,229,238,249,258,276,357],"null":[1,5,10,16,26,35,71,84,99,101,102,104,107,141,174,191,195,208,209,223,230,231,232,233,236,253,317,330,332,348,360,370,376],"public":388,"return":[5,7,10,12,13,15,22,26,27,60,67,73,85,94,95,96,97,98,100,101,102,112,118,130,131,135,143,152,164,176,179,180,182,189,194,200,201,202,204,205,206,207,208,209,211,219,238,249,257,258,262,263,271,273,277,278,282,290,298,299,300,301,302,303,304,305,306,307,309,310,311,313,314,315,316,317,318,323,324,329,330,331,332,337,338,339,340,341,342,344,346,348,352,358,359,370,371,373],"throw":[317,348],"true":[1,5,8,16,52,57,63,73,94,97,98,99,100,101,102,117,124,125,135,136,143,149,152,164,174,180,228,230,231,232,233,253,257,258,262,263,267,317,329,330,331,332,348,370,371,373,376,377],"try":[370,376],A:[1,15,98,100,104,136,137,166,174,230,231,232,233,266,316,317,320,321,324,348,360,370,376,386],AND:260,At:63,Be:262,By:[52,244,256,370],For:[52,117,228,328],If:[1,2,62,87,107,124,125,135,149,174,176,230,231,232,233,250,253,262,264,330,331,332,370,371,373,374,376],In:[1,124,125,227],It:[152,174,357],Not:[98,100],OR:261,One:[13,174,287],Or:[13,114,384],The:[2,90,118,125,149,197,230,231,232,233,264,298,305,306,307,313,337,340,341,342,370,373,386,391],These:387,Will:[174,363,366,379],With:104,__init__:[1,69,174,259],_io:[60,372],acc:328,accept:52,accumul:328,ad:67,add:[68,149,171,173,384],advis:27,after:[370,373,376,377],agg:[72,104,287,288],agg_group:334,aggreg:[15,29,30,31,33,37,53,54,64,70,87,104,106,114,153,154,155,157,159,167,168,170,230,231,232,233,267,271,272,275,277,279,285,287,288,328,356,363,366,370,379,381,388],alia:[265,356],all:[24,25,27,38,69,83,127,152,174,192,200,211,245,267,288,317,321,329,331,348,351,370,376,386,388],alloc:[38,238],allow:[27,117,149,152,228,259,376,377],allow_parallel:149,alreadi:[1,135,257,330,331],also:[11,18,28,52,328,371,387],alwai:370,amount:[28,214],an:[13,15,41,56,60,69,71,76,78,79,80,83,127,130,149,166,174,186,187,188,192,230,231,232,233,245,253,262,285,329,335,370,376,380,388],ani:[1,2,6,15,36,42,43,62,63,72,76,96,107,158,174,176,230,231,232,233,252,253,276,308,327,330,331,332,343,363,366,373,379],anoth:[125,176,236],anti:174,apach:373,api:[0,271],appl:[4,26],appli:[15,36,107,114,152,158,230,231,232,233,271,328,362,388],ar:[2,10,15,27,63,94,96,97,98,100,118,124,125,174,204,253,257,262,264,268,329,370,373,376,377,382,386,388,391],arg:[36,62,158,176,253],argsort:264,argument:[36,60,62,158,174,370],arithmet:15,arrai:[1,56,61,78,79,80,174,179,182,186,187,188,230,231,232,233,250,253,257,317,329,348,370],arraylik:174,arrow:[56,59,250,329,371,373],articl:[317,348],ascend:264,asof:[26,149],assert:18,attribut:[1,69,174,388],automat:[1,174,374],avail:[143,385,386,390,391],awar:373,axi:[29,30,33,54],b:[1,4,5,7,11,12,15,16,18,20,26,52,55,57,61,62,71,72,99,104,142,189,270,278,290,329,330,331,332,358,359,362,368],b_agg_list:104,backward:[13,195],banana:4,bar22:15,bar:[4,7,11,15,16,20,26,52,55,57,61,62,71,271,384],base:[14,145,285,363,366,379],batch_siz:370,becaus:27,befor:[230,231,232,233],behavior:[72,230,231,232,233,257,363,366,379],being:370,below:[18,384],between:[44,81,92,190,235,270,368],bewar:2,binari:59,binaryio:[59,370,371,373],bit:[117,228],bitwis:[260,261],book:107,bool:[1,8,16,22,44,50,52,57,60,62,63,65,73,78,79,80,99,117,124,125,135,136,140,143,149,152,164,166,174,179,182,186,187,188,199,203,210,212,227,228,229,230,231,232,233,235,236,241,243,253,257,262,264,267,329,330,331,332,370,371,373,376,377,382],both:[26,149],bound:[262,370,376],buffer:370,builtin:370,by_column:[18,166],bytesio:[60,370,372],c:[1,4,5,7,11,12,15,16,18,20,26,52,55,57,61,62,63,72,84,142,189,278,290,331,358,359],cach:[135,143,259,376,377,382],calcul:[244,256],calendar:[315,346],call:[27,371,385,390],callabl:[2,15,36,72,107,152,158,176,273,328,357,362],can:[11,15,18,52,69,104,112,117,174,179,182,219,228,257,262,271,298,299,304,305,306,307,309,313,314,315,337,338,339,340,341,342,344,346,363,370,374,376,387],cannot:[370,376],capac:[50,241],cast:[15,62,117,174,228,251,268,317,329,348,382],categor:[135,143,259,333,382],categori:[259,382],categoricaltyp:56,caution:135,certain:[23,84,174],chain:384,chang:[104,370],charact:[370,376],cheap:[3,185],check:[16,92,96,199,203,204,210,212,236,316,347],chrono:[310,324,345],chunk:[34,184,220,227,250,370],chunkedarrai:34,clickhous:374,clone:[61,62,252,253,257],closest:329,coerc:118,coercion:[118,135,143],col1:1,col2:1,col:[1,52,71,72,82,99,104,114,262,271,287,288,317,332,348,356,384,386],collect:[27,56,72,114,143,262,375],column:[1,6,7,8,9,11,12,18,22,23,26,29,30,31,32,33,35,37,39,40,41,45,46,52,53,54,64,67,68,72,73,84,87,104,114,118,124,125,135,138,139,140,142,143,147,149,153,154,155,156,157,159,161,166,167,168,170,171,172,173,174,264,265,266,268,269,270,271,285,287,288,327,328,330,331,332,334,335,336,362,363,364,365,366,367,368,369,370,373,374,376,378,379,380,383,384,388],column_0:332,column_1:332,column_to_agg:271,column_x:370,columnar:43,columnwis:[260,261],combin:[19,271],come:[385,390],comma:57,comment:[370,376],comment_char:[370,376],compar:[16,236],complet:[253,271],compress:63,comput:[78,79,80,81,112,149,186,187,188,190,219,230,231,232,233,270,286,368,388],concat:268,concaten:267,concatten:15,conclus:[1,332],config:388,connect:[370,371,373,374],connection_uri:374,connectorx:374,connextorx:374,consid:[16,107,174,236,271],construct:[1,174,329,330,331,332],constructor:388,contain:[1,101,102,174,220,250,317,330,332,348],context:[69,70,72,87,124,125,259,387],contigu:[38,329,331,370],convers:[253,388],convert:[43,61,62,252,253,333,361],copi:[56,191,250,253,329],core:[1,62,174],correl:368,could:328,count:[35,113,189,221,223,255,284,367,370],covari:270,cpu:370,creat:[35,69,83,94,97,98,100,101,102,127,174,191,192,227,245,262,323,329,352],creation:[1,174,330,332],cross:[26,149],csv:[57,356,370,376,388],cumul:[78,79,80,186,187,188],custom:[2,72,107,152,273,362],d:[20,26,55,57],dai:[6,307,308,314,342,343],data:[1,27,38,43,50,56,61,62,76,120,143,174,191,193,234,241,252,253,257,259,329,330,331,332,356,374],data_typ:183,databas:374,datafram:[0,71,72,87,99,104,114,135,138,139,140,141,142,143,145,146,148,149,150,151,152,153,154,155,156,157,159,160,161,165,166,167,168,169,170,171,172,173,174,251,255,262,266,267,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,289,290,291,292,293,294,295,296,297,317,329,330,331,332,333,348,357,358,359,370,371,372,373,374,386,388],dataset:370,datatyp:[1,2,5,11,15,72,107,174,176,183,189,193,210,212,262,324,353,360,362,370,376],date32:[6,298,305,307,310,312,313,314,315,324,337,340,342,345,346,353],date64:[6,90,298,299,304,305,306,307,309,310,312,313,314,315,324,337,338,339,340,341,342,344,345,346,353,360],date:[62,298,300,301,302,303,305,307,313,314,315,337,340,342,346],date_as_object:62,datetim:[69,83,92,174,192,299,300,301,302,303,304,306,308,309,312,338,339,341,343,344,360,361],datetime64:62,datetimeindex:[174,331],datetimenamespac:192,dd:353,ddof:[244,256],debug:143,decim:[120,234],deep:[3,185],defin:360,degre:[244,256],delimit:[57,268,370,376],delta:[244,256],depend:72,deprec:[182,287,288],descend:52,describ:356,describe_optimized_plan:27,describe_plan:27,descript:388,determin:[15,118,264,370],deviat:[53,126,167,244,378],df1:16,df2:[1,16],df3:1,df4:1,df:[1,4,5,7,11,12,15,18,20,21,26,47,52,55,57,61,62,65,66,71,72,99,104,114,142,262,267,271,278,290,317,329,330,331,332,333,348,358,359,374,386],dict:[1,39,189,271,330,370,371,373,376],dictat:118,dictionari:[1,189,330,370,376],differ:[76,298,307,313,337,342,363,366,370,379],digit:[120,234],dimens:[1,330,331,332],dimension:[1,174,330,332],direct:51,directori:373,disk:[63,164],divisor:[244,256],doc:[114,324,345,373],document:[317,348],doe:[1,101,143,174,257,330,332],doesn:257,don:[148,151,257],done:356,dot:164,down:[376,377],downscal:[6,308,343],drop:[8,9,10,140,141,257],dt:[69,174,361,386,391],dtype:[1,62,72,76,85,107,118,130,174,194,201,205,206,207,262,324,360,370,376],due:[48,49,121,122,162,163,240],dummi:[58,333],duplic:[8,24,93,140,200,264],dure:[370,376],e:[6,20,55,57,253,308,343,370,371,373],each:[72,184,274,278,290,358,359],eager:[1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,37,38,39,40,41,44,45,46,48,49,50,51,52,53,54,55,58,64,65,67,68,72,107,135,143,152,174,175,176,179,180,181,182,183,185,190,191,192,194,195,196,197,198,200,201,202,204,205,206,207,208,209,211,214,219,224,225,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,245,247,248,249,251,254,255,258,262,263,265,267,269,327,328,329,330,332,333,335,336,357,360,362,363,364,365,366,367,370,371,372,373,374,375,378,379,380,383,388],effect:15,either:[27,44,235],element:[78,79,80,96,118,176,186,187,188,196,198,204,214,244,247,254,256],elementwis:[230,231,232,233,260,261],empti:[48,49,121,122,162,163,174,240],encod:[58,370],encount:[317,348,370,376],end:92,engin:374,ensur:382,enumer:370,eq:69,equal:[16,149,230,231,232,233,236,262,370,376,382],equival:[325,326],error:[317,348,370,376],etc:[262,332,370,371,373],evalu:[13,14,68,96,145,149,171,173,180,258,260,261,262,263],everi:[78,79,80,85,131,143,186,187,188,194,249,370],exact:[50,241],exampl:[1,4,5,7,11,12,15,16,18,20,21,26,47,52,55,57,61,62,66,71,72,99,104,114,142,174,189,262,271,278,290,317,329,330,331,332,348,356,358,359,360,374,384],except:[149,253],execut:[27,134],existing_nam:172,expand:[85,118,194],expect:72,expens:[357,370,376],expon:115,expos:388,expr:[12,13,14,26,45,52,67,68,142,144,145,147,149,161,163,166,171,173,260,261,262,264,265,266,268,269,270,271,327,328,334,335,336,356,360,361,362,363,364,365,366,367,368,369,378,379,380,381,383,384,386],exprdatetimenamespac:83,express:[0,13,14,49,52,68,69,71,76,77,81,84,87,92,94,97,98,99,100,101,102,104,115,122,130,135,143,145,163,166,171,173,262,270,317,328,335,348,353,356,361,368,380,384,388],exprstringnamespac:127,extra:[370,371,373],extract:[298,299,304,305,306,307,309,313,314,315,317,337,338,339,340,341,342,344,346,348],f32:[1,174],f64:[5,7,11,15,26,52],f:[2,72,107,152,273,328,357,362],fail:[8,140,176],fals:[1,5,16,22,44,50,52,60,62,65,73,78,79,80,99,117,124,125,135,140,143,149,152,164,166,174,179,182,186,187,188,227,228,229,230,231,232,233,235,236,241,243,253,257,258,262,264,330,332,370,373,376],feather:[59,371,388],featur:[63,259],fetch:[27,148,151],field:57,figsiz:164,figur:164,file:[57,59,60,63,143,370,371,372,373,376,377],fill:[13,48,49,75,86,89,121,122,162,163,195,230,231,232,233,240],fill_valu:[49,86,122,144,163],filter:[82,143,237,262],find:264,finish:[135,259],finit:[94,201],first:[20,28,74,91,95,148,151,174,189,198,202,264,278,317,320,335,348,350,358,370],fit:[50,241],float32:[1,15,174],float64:[11,15],fmt:[310,324,345,353],fn:328,follow:[72,257,374,386,391],foo11:15,foo:[4,7,11,15,16,20,21,26,47,52,55,57,61,62,66,71,82,262,271,334,360,369,384],forc:149,force_parallel:149,form:[1,174],format:[12,32,63,142,156,310,324,345,371,372],forward:[13,195],found:11,frac:[44,235],fraction:[44,235],frame:[1,3,5,6,7,8,10,12,13,14,16,18,20,22,26,27,28,29,30,31,32,33,35,37,38,39,44,45,48,49,50,51,52,53,54,55,58,62,64,65,67,68,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,165,166,167,168,169,170,171,172,173,251,255,267,329,330,332,333,370,371,372,373,374,376,377],frame_equ:18,freedom:[244,256],from:[1,7,8,27,39,44,45,73,84,124,125,138,139,140,141,143,161,191,214,235,258,298,299,304,305,306,307,309,312,313,314,315,329,330,331,332,337,338,339,340,341,342,344,346,370,371,372,373,374,376,377],from_panda:374,fsspec:[370,371,373],func:[36,158,176],g:[6,253,308,343,370,371,373],gbselect:[287,288],gener:[373,374],get:[1,4,11,17,20,21,24,25,28,34,42,47,55,58,66,70,73,74,78,79,80,88,93,95,103,105,108,109,110,111,116,126,128,132,133,146,148,150,169,174,177,178,180,181,184,186,187,188,193,198,200,201,202,205,206,207,208,209,211,215,217,218,220,222,224,225,226,242,244,247,250,254,256,257,263,292,293,294,295,296,297,318,327,335,336,349,363,364,365,366,378,379,380,383],github:107,give:[118,388],given:[2,48,49,118,121,122,162,163,176,230,231,232,233,240,370],global:[135,143,382],go:312,goessner:[317,348],graph:27,graphiz:27,graphviz:164,group:[18,70,72,114,124,125,147,272,273,274,275,276,278,279,280,281,282,283,284,285,286,289,290,291,292,293,294,295,296,297,356,357,358,359],group_valu:276,groupbi:[6,72,104,114,124,125,356,358,359,388],grow:65,grown:22,gt:69,gt_eq:69,guarante:[143,370,376],ha:[72,203,376],ham:[4,7,11,16,20,26,52,55,57,61,62,271],handler:370,has_head:[57,370,376],hash:19,have:[38,135,164,370,382],head:28,header:[11,57,370,376],height:1,help:[143,386],high:262,hit:134,hold:[50,241],horizont:[15,22,328,363,366,379],host:[370,371,373],hot:58,hour:[6,308,343],how:[26,118,149,374],how_can_i:107,html:[107,114,324,345,373],http:[107,114,317,324,345,348,373],i32:114,i64:[1,4,7,11,12,18,20,26,52,55,71,72,84,104,142,174,278,290,329,330,331,332,358,359],id_var:[32,156],identifi:[32,156],idiomat:271,idx:[46,238],ignor:[60,230,231,232,233],ignore_error:[370,376],ignore_nul:[230,231,232,233,257],implement:63,in_plac:[22,50,52,65,227,229,241,243],includ:[57,257],increas:373,index:[23,41,42,46,51,70,73,74,123,130,165,174,177,178,179,180,181,182,238,242,248,263,264,277,323,324,345,352,370],indic:[248,333,370,376],individu:[72,184],infer:[1,2,174,332,370,376],infer_schema_length:370,infinit:[97,205],influenc:143,initi:[1,328],inner:[26,81,149,174,190],input:[0,362,363,366,379,388],insert:[23,40],instal:[62,164,331,370,371,373,374],instanc:[15,328,370,376],instead:[1,60,262,287,288,373],int32:[262,315,346],int64:[1,11,15,117,174,228,262,311],int8:15,integ:[117,228,238,360],interpret:[1,174,332,370,376],invalid:[257,317,348],io:107,ipc:[59,371,388],is_not:207,is_not_nul:82,isn:384,iso:313,item:[85,194],join:[114,135,143],json:[60,317,348,372,388],json_path:[317,348],json_val:[317,348],jsonpath:[317,348],k0:[19,90,197],k1:[19,90,197],k2:[19,90,197],k3:[19,90,197],keep:[104,370,376],kei:[6,39,149,277,285],keyword:[36,158,174],know:[253,257],kwarg:[36,62,63,158,253,373],label:[1,330,331,332],lambda:[2,15,72,107,152,176],larg:[73,124,125],largelist:12,last:[55,129,169,247,290,298,307,313,337,342,359,380],latest:89,lazi:[12,13,14,26,45,52,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,165,166,167,168,169,170,171,172,173,260,261,262,264,265,266,268,269,270,271,327,328,334,335,336,360,361,362,363,364,365,366,367,368,369,376,377,378,379,380,381,383,384],lazili:[376,377],lazyfram:[0,26,27,87,356,357,358,359,376,377,388],lazygroupbi:147,ldf:149,lead:[130,230,231,232,233,257,319,363,366,379],leap:[306,341],left:[26,149,328],left_on:[26,149],len:[44,235],length:[20,28,51,55,123,165,184,198,213,230,231,232,233,242,247,323,352,370],letter:[12,142,278,290,358,359],level:[15,87,376,377],lf:384,lib:[56,174,250,329],like:[26,143,370,371,372,373],line:[370,376],linear:268,lineitem:374,list:[1,4,6,7,8,10,11,12,17,18,22,26,32,43,52,68,84,85,96,104,114,118,139,140,141,142,147,149,156,166,173,184,194,204,230,231,232,233,248,252,260,261,264,267,268,271,277,287,328,356,363,366,370,373,374,376,379,381],lit:[328,384],liter:[360,361],load:374,local:[224,225],locat:[41,46,179,182,238,248],logic:149,loop:18,lossi:370,low:262,low_memori:[370,376],lower:[117,143,228,262],lowercas:[325,354],lt:69,lt_eq:69,mai:[1,48,49,121,122,162,163,240,323,328,329,352,370],maintain_ord:[8,140],make:[38,118,329,331,370,371,373,374],manag:259,mani:374,manipul:388,manual:374,map:[39,271,362,370,373,376],mask:[24,25,93,95,103,196,200,201,202,205,206,207,208,209,211,224,225,237,258,263,316],match:[1,149,317,320,321,330,331,332,348,350,351],materi:357,matlotlib:164,max:[5,13,78,186,189,195,230,271,356],maxim:[280,293],maxima:177,maximum:[29,108,153,215,224,300,363,370],mean:[5,13,85,189,194,195,231,265],median:5,memori:[50,227,241,257,370,373,376,377],memory_map:373,method:[1,63,69,83,127,174,176,192,245,259,370,386,388,391],min:[5,13,79,187,189,195,232,271],min_period:[230,231,232,233],minim:[178,218,283,296],minimum:[15,33,111,157,225,303,366],minut:[6,308,343],miss:[75,89,107,174,257],mix:189,mm:353,modifi:[22,65,229,325,326,370],moment:[5,63],mondai:314,month:[6,298,308,337,343],more:[27,63,107,324,373],most:[112,219,329],mostli:56,move:[230,231,232,233],ms:311,multi:[370,376],multipl:[22,52,68,112,139,166,173,219,264,271,287,328,356,384],multipli:[230,231,232,233],must:[1,107,149,174,330,331,332,370],mysql:374,n:[6,20,28,44,55,91,118,129,131,148,151,169,198,214,235,244,247,249,256,278,290,308,335,343,358,359,370,373,375,376,377,380],n_row:143,n_thread:370,n_uniqu:[271,356],name:[1,4,7,9,26,39,67,71,104,138,139,166,174,229,260,261,266,270,271,331,332,335,356,368,370,375,376,380,381,388],namespac:[69,83,127,174,192,245,385,388,390],nan:[98,100,174,206,207],nativ:[370,371,373],ndarrai:[1,61,174,238,248,253,257,332],nearest:149,need:[50,135,143,241,356],neg:[48,49,121,122,162,163,240,323,352],negat:[99,207],neq:69,net:[317,348],new_col:40,new_column:370,new_fil:57,new_nam:172,new_valu:328,next:75,no_optim:[135,143,152],node:[134,152],non:[5,208,230,231,232,233,253,268,306,341],none:[1,2,8,10,13,23,26,40,41,44,48,49,57,59,60,63,69,71,72,86,91,99,104,107,121,122,129,140,141,149,162,163,164,174,175,176,198,230,231,232,233,235,240,247,257,259,262,317,323,324,330,331,332,335,348,352,353,360,362,370,371,373,374,375,376,377,380,382],note:[8,140,143,148,151,164,174,370],noth:[317,348],notic:[1,174],np:1,nr:[12,142,278,290,358,359],ns:62,nth:[131,249],null_equ:[16,236],null_valu:[370,376],nullabl:[1,174,257,330,332],num_el:214,number:[6,27,34,44,48,49,77,98,100,118,120,121,122,143,148,151,162,163,169,203,220,221,230,231,232,233,234,235,240,244,256,269,274,278,290,299,304,305,306,308,309,313,314,315,335,338,339,340,341,343,344,346,358,359,370,375,380],numer:[5,118,210],numpi:[1,61,174,238,248,253,257,332],numpy_arrai:61,object:[27,62,69,83,127,174,192,245,312,370,371,372,373,388],occur:[112,219],off:[135,143,152,382],offset:[51,123,165,242],often:[104,118],old:39,onc:[134,370],one:[13,58,149,175,195],onli:[5,52,63,70,117,228,250,373],op:118,open:[370,371,373],oper:[2,6,15,18,23,27,38,48,49,52,56,61,62,70,78,79,80,117,121,122,143,147,148,149,151,162,163,186,187,188,228,240,250,252,253,257,260,261,271,285,308,329,343],optim:[27,38,135,136,143,152,164,376,377],option:[1,2,8,10,22,26,44,50,52,57,60,65,72,91,107,129,140,141,149,164,174,176,177,178,190,198,227,229,230,231,232,233,235,241,243,247,252,262,323,324,330,332,335,352,353,360,362,370,371,373,374,375,376,377,380],orang:4,order:[1,73,124,125,166,264],ordin:[307,342],org:[114,373],orient:[1,332],origin:[104,317,348],other:[1,16,81,96,107,174,175,190,204,236,258],other_df:26,otherwis:[176,384],out:73,outer:[26,149],output:[0,2,57,71,72,76,107,176,362,388],output_path:164,over:[2,18,51,72,107,176,230,231,232,233,273,328,357,362,370],overhead:[376,377],overrid:[1,330,331],overview:388,overwrit:[68,143,171,173,370,376],pa:329,packag:331,page:388,pair:39,panda:[1,62,174,331,374],pandas_df:62,parallel:[27,149,374],parallelli:374,paramet:[1,2,6,7,9,12,13,14,15,16,18,19,20,22,23,26,28,32,36,39,40,41,42,44,45,46,48,49,51,52,55,57,59,60,62,63,65,67,68,71,72,73,76,78,79,80,81,84,87,90,96,107,114,117,118,120,121,122,123,124,125,130,135,138,139,143,145,147,148,149,151,152,156,158,161,162,163,164,165,166,169,171,173,174,175,176,186,187,188,190,195,196,197,198,214,227,228,229,234,235,236,237,238,240,242,243,244,247,248,253,256,258,262,263,264,267,268,270,271,273,276,278,285,287,290,308,316,317,320,321,323,324,328,329,330,331,332,333,335,343,347,348,350,351,352,353,356,357,358,359,360,361,362,363,368,370,371,372,373,374,375,376,377,380],parent:15,parquet:[63,373,377,388],pars:[174,324,353,370,376],parser:370,part:[48,49,121,122,162,163,240,329],particular:[370,371,373],partit:[373,374],partition_col:374,partition_num:374,partition_on:374,partition_rang:374,pass:[2,63,152,164],password:[370,371,373,374],past:152,path:[57,59,60,63,317,348,370,371,372,373,376,377],pathlib:[57,59,60,63,370,371,373,376,377],pattern:[174,316,320,321,347,350,351],pd:[331,374],pd_df:331,pd_seri:331,peak:[224,225],pearson:368,per:[35,282,284,286,291,292,293,294,295,296,297,370,376],perform:[38,52,149,298,299,304,305,306,307,309,313,314,315,337,338,339,340,341,342,344,346,370,373,376],period:[48,49,121,122,162,163,240],physic:[134,149,370],piec:257,pivot:388,pivot_column:285,pivotop:285,pl:[1,4,5,7,11,12,15,16,18,20,21,26,47,52,55,57,61,62,66,71,72,99,104,117,142,174,189,228,257,262,271,278,290,317,329,330,331,332,348,356,358,359,374],place:[9,22,23,48,49,52,65,121,122,162,163,227,229,240,243],plan:[27,134,136,137,149,164],plot:164,point:[27,120,152,203,234],polar:388,port:[370,371,373,374],posit:174,position:174,possibl:[174,370],postgr:[114,374],postgresql:[114,374],potenti:[376,377],power:115,predic:[14,87,135,143,145,152,196,376,377],predicate_pushdown:[135,136,143,152],predict:38,presenc:253,present:[1,330,331],pretti:60,primit:[96,253],print:[11,18,27],produc:[107,362],product:[81,190],project:[72,124,125,135,143,152,370,373,376,377],projection_pushdown:[135,136,143,152],properti:[4,11,21,47,66,83,127,192,193,222,239,245],protocol:374,provid:[317,348,370,374,376],push:[376,377],pushdown:[135,143,152],pyarrow:[56,62,63,174,250,253,329,370,371,373],python:[43,72,107,252,300,301,302,303,312,361,373],queri:[27,135,136,137,143,164,317,348,374,376,377],quick:189,quit:357,rais:[115,253],rang:[262,298,305,306,307,313,337,340,341,342,374],rather:149,raw:374,raw_output:164,read:[107,143,324,370,371,372,373,374,376,377],read_tabl:373,reader:[371,373],rechunk:[267,329,331,370],recommend:[271,357],redshift:374,reduc:[216,246,280,281,283,289,370,376,377],reduct:15,refer:[0,67,370],regard:[230,231,232,233,370],regardless:[317,348],regex:[316,320,321,347,350,351],relat:[69,83,127,174,192,245],remot:[370,371,373],remov:[7,138,139,319,322],renam:[71,172,370,386],repeat:118,replac:[13,41,44,67,235,237,238,321,351],repres:[1,174,238,244,256,306,329,330,331,332,341],represent:[60,136,137,298,299,304,305,306,307,309,313,314,315,337,338,339,340,341,342,344,346],request:27,requir:[62,253,331],reset:135,result:[1,49,122,134,163,230,231,232,233,271,330,331,332,362,374,376,377],resultingparamet:[230,231,232,233],return_dtyp:[2,72,107,176,362],revers:[52,73,78,79,80,124,125,166,179,182,186,187,188,243,264],right:[26,96,149,204,370],right_on:[26,149],ritchie46:107,roll:[230,231,232,233],root:104,row:[1,2,8,14,15,19,20,24,25,27,28,51,55,85,140,141,143,145,146,148,150,151,169,194,278,290,328,332,335,358,359,370,373,376,377,380],rs:[324,345],rule:[6,15,308,310,343,345],run:[27,135,143],rust:[63,371,373],s1:15,s2:[15,174],s3:174,s:[7,18,26,84,112,114,147,174,219,356,363,366,368,370,379],safe:[117,228,253],same:[85,174,176,194,230,231,232,233,258,259],scan:[143,148,151,373,376,377],scan_csv:356,scenario:174,schema:370,second:[6,264,306,308,341,343],see:[28,310,345],seed:[19,90,197],seen:[75,89],select:[46,71,72,84,99,114,119,124,125,248,262,276,278,288,290,317,348,358,359,370,373,374,388],self:[36,44,114,158,235,258],sens:[370,371,373],sent:[62,253],sep:[57,370,376],separ:[57,268,370,376],sequenc:[1,45,161,174,267,330,331,332],seri:[0,1,2,9,14,15,17,19,22,23,24,25,40,41,46,67,72,73,85,90,95,96,107,118,123,130,131,145,262,263,265,268,269,272,327,328,329,331,335,336,348,352,360,362,363,364,365,366,367,375,378,379,380,383,388],serial:60,series_num:189,series_str:189,server:374,set:[1,4,44,135,149,174,176,230,231,232,233,235,238,330,332,370],shape:[1,4,5,7,11,12,18,20,26,52,55,71,72,84,99,104,142,174,278,290,317,329,330,331,332,348,358,359],share:259,shift:[49,122,163],should:[6,57,59,63,70,87,138,149,164,176,230,231,232,233,360],show:[27,35,164],show_graph:27,shrink:[50,241],sign:[117,228],similar:[15,114,149],simplifi:[135,143],simplify_express:[135,136,143],sinc:[287,288,306,341],singl:[87,107,166,174,227,250,267,276,356,362,370,374,375],size:[230,231,232,233,262],skip_row:[370,376],slice:[230,231,232,233],slow:2,small:[27,73,124,125],smaller:143,snappi:63,so:264,some:[370,376],sometim:387,sort:[18,73,104,125,149,179,182,257,264,278,290,358,359],sourc:[143,259,372,373,374],spam:271,specif:174,specifi:[1,174,330,331,332],speed:[1,174,330,332],split:271,sql:[26,374,388],sqlite:374,stabl:373,stack:[22,65],standard:[53,126,167,244,317,348,378],start:[6,18,27,92,123,147,165,298,305,307,313,323,328,337,340,342,352,370,376,384],stat:388,statist:[5,189],std:[5,189],step:262,stop:[370,373,376,377],stop_after_n_row:[370,373,376,377],storag:[370,371,373],storage_opt:[370,371,373],store:107,str:[1,4,5,6,7,8,9,10,11,12,13,18,20,26,32,39,40,45,49,52,55,57,59,60,63,69,71,72,84,86,99,104,114,125,136,137,138,139,140,141,142,144,147,149,156,161,163,164,166,172,174,189,195,222,229,260,261,265,266,268,269,270,271,278,285,287,290,308,310,316,317,320,321,324,327,330,331,332,334,335,336,343,345,347,348,350,351,353,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,386,391],strategi:[13,26,195,370],stream:[59,371],strftime:324,string:[15,52,60,69,127,135,136,137,143,174,245,259,268,316,317,318,320,321,323,325,326,347,348,349,350,351,352,370,376,382,388],string_cach:[135,143],stringio:370,stringnamespac:245,strptime:[310,345],structur:1,sub:273,sub_df:18,subgroup:114,subsequ:38,subset:[8,10,140,141],subslic:[323,352],substr:[320,321,351],sugar:[82,334,369],sum:[15,18,72,80,114,188,189,230,231,232,233,257,271,328,366],summar:5,summari:[5,189],sundai:314,supercast:15,support:[63,174,329,374],sure:[38,262,329,331,370,374],symbol:57,syntact:[82,334,369],syntax:[52,164,174,271,324],system:370,t:[148,151,257,384],tabl:[1,56,62,329],tail:271,take:[15,28,91,129,131,214,249,258,335,380],taken:130,temporarili:259,textio:[57,370],than:149,thei:27,thens:384,therebi:[376,377],thi:[1,2,6,8,15,19,23,24,25,27,29,30,31,33,34,37,38,44,45,48,49,50,51,53,54,56,57,60,61,62,64,65,73,77,85,92,96,107,114,117,118,121,122,124,125,134,135,140,141,143,149,152,161,162,163,174,175,176,179,182,191,193,194,199,203,204,210,212,213,214,215,216,217,218,220,221,222,223,226,227,228,229,230,231,232,233,235,239,240,241,242,243,244,246,250,251,252,253,256,257,259,262,269,271,328,329,332,357,370,371,373,376,377,382,385,388,390],thread:[370,374,376],through:[174,374],time:[118,268,375],timeseri:388,to_str:60,toggl:[230,231,232,233,382],tp:[363,366,379],trail:322,transform:[354,355],travers:[230,231,232,233],tri:2,tupl:[2,42,43,47,164,239,271,276,374],turn:[135,143,152,382],tutori:114,two:[1,15,81,190,270,330,332,362,368,374],type:[2,8,11,12,15,56,61,62,72,73,76,90,96,107,118,135,140,143,174,176,183,193,197,253,258,262,311,323,329,352,353,360,362,370,376,382],type_coercion:[135,136,143],u32:318,udf:[107,152,362],uint32:[73,118,130,180,262,263,298,299,304,305,306,307,309,313,314,337,338,339,340,341,342,344,349],uint64:[19,117,197,228],uir:374,un:27,undefin:257,under:[386,391],underli:[56,117,120,228,234,250,253,298,299,304,305,306,307,309,313,314,315,337,338,339,340,341,342,344,346,373],union:[1,6,7,8,12,13,18,22,26,32,45,49,52,57,59,60,63,67,68,72,84,86,92,96,107,114,125,140,141,142,144,147,149,152,156,161,163,166,173,174,186,187,188,189,215,216,218,237,238,246,248,260,261,262,264,265,269,270,271,276,287,300,301,302,303,327,328,329,331,332,335,336,353,356,360,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,383],uniqu:[25,74,95,103,113,181,189,202,211,221,255,284,367],unique_nam:356,unit:[6,308,343],unless:257,unoptim:[27,137],unpivot:[32,156],unsign:[117,228],until:[27,259],up:[1,149,174,330,332],upper:[262,370,376],uppercas:[326,355],uri:374,us:[1,6,15,32,34,52,63,69,70,87,107,117,124,125,135,143,148,151,156,174,176,179,182,228,244,248,253,256,257,262,264,268,271,287,288,323,330,331,332,352,357,360,363,366,370,371,373,374,379,387],usag:[50,241,370,376],use_custom_funct:107,use_pyarrow:[63,370,371,373],usernam:[370,371,373,374],utf8:[11,15,85,194,212,268,310,317,323,324,348,352,353,370],util:143,val:375,valid:[262,316,317,320,321,348,373],valu:[1,10,13,16,19,29,30,31,32,33,37,39,48,49,53,54,57,64,72,73,74,75,77,86,88,89,90,91,93,94,95,96,97,98,100,101,102,103,105,107,108,109,110,111,112,113,114,116,118,121,122,128,129,130,131,132,141,153,154,155,156,157,159,162,163,167,168,170,174,177,178,180,189,191,195,197,200,201,202,204,205,206,207,208,209,211,215,216,218,219,221,223,226,230,231,232,233,236,237,238,240,246,248,249,255,257,258,263,268,269,274,275,278,279,280,281,283,284,285,290,291,292,293,294,295,296,298,305,307,313,317,318,320,321,323,327,328,330,332,336,337,340,342,348,350,351,352,356,358,359,360,363,364,365,366,367,370,374,375,376,379,382,384],value_var:[32,156],values_column:285,variabl:[32,58,156,333],varianc:[64,133,170,256,383],variant:[179,182,354,355],variou:[1,69,174,388],vector:[230,231,232,233],veri:3,version:[287,288],vertic:[65,363],via:370,view:253,vs:63,want:[87,107,135,143,148,151,253],we:[18,52,104,149,370,384],week:[6,308,314,343],weight:[230,231,232,233],what:[253,257],when:[11,15,135,174,328,373,382],whenthen:384,where:[10,67,94,97,98,100,101,102,180,244,256,258,263,314,374,384],whether:[1,57,166,332],which:[52,57,59,63],whitespac:[319,322],whole:[124,125,306,341],width:[1,370],wildcard:[84,328,386],window:[114,230,231,232,233,388],window_s:[230,231,232,233],wise:328,with_column:[262,384],with_replac:[44,235],without:191,would:[73,253,264],write:[57,59,60,63,164],write_t:63,written:[57,59,63],www:114,x:[26,72,370],y:26,year:[307,313,342],yield:[1,332,370,376],you:[87,107,117,135,143,148,151,164,174,228,253,257,262,357,370,376],your:[1,174,330,332,370],yyyi:353,z:26,zero:[13,56,195,250,253,329,370],zero_copy_onli:253,zip_with:15},titles:["&lt;no title&gt;","polars.DataFrame","polars.DataFrame.apply","polars.DataFrame.clone","polars.DataFrame.columns","polars.DataFrame.describe","polars.DataFrame.downsample","polars.DataFrame.drop","polars.DataFrame.drop_duplicates","polars.DataFrame.drop_in_place","polars.DataFrame.drop_nulls","polars.DataFrame.dtypes","polars.DataFrame.explode","polars.DataFrame.fill_none","polars.DataFrame.filter","polars.DataFrame.fold","polars.DataFrame.frame_equal","polars.DataFrame.get_columns","polars.DataFrame.groupby","polars.DataFrame.hash_rows","polars.DataFrame.head","polars.DataFrame.height","polars.DataFrame.hstack","polars.DataFrame.insert_at_idx","polars.DataFrame.is_duplicated","polars.DataFrame.is_unique","polars.DataFrame.join","polars.DataFrame.lazy","polars.DataFrame.limit","polars.DataFrame.max","polars.DataFrame.mean","polars.DataFrame.median","polars.DataFrame.melt","polars.DataFrame.min","polars.DataFrame.n_chunks","polars.DataFrame.null_count","polars.DataFrame.pipe","polars.DataFrame.quantile","polars.DataFrame.rechunk","polars.DataFrame.rename","polars.DataFrame.replace","polars.DataFrame.replace_at_idx","polars.DataFrame.row","polars.DataFrame.rows","polars.DataFrame.sample","polars.DataFrame.select","polars.DataFrame.select_at_idx","polars.DataFrame.shape","polars.DataFrame.shift","polars.DataFrame.shift_and_fill","polars.DataFrame.shrink_to_fit","polars.DataFrame.slice","polars.DataFrame.sort","polars.DataFrame.std","polars.DataFrame.sum","polars.DataFrame.tail","polars.DataFrame.to_arrow","polars.DataFrame.to_csv","polars.DataFrame.to_dummies","polars.DataFrame.to_ipc","polars.DataFrame.to_json","polars.DataFrame.to_numpy","polars.DataFrame.to_pandas","polars.DataFrame.to_parquet","polars.DataFrame.var","polars.DataFrame.vstack","polars.DataFrame.width","polars.DataFrame.with_column","polars.DataFrame.with_columns","polars.Expr","polars.Expr.agg_groups","polars.Expr.alias","polars.Expr.apply","polars.Expr.arg_sort","polars.Expr.arg_unique","polars.Expr.backward_fill","polars.Expr.cast","polars.Expr.count","polars.Expr.cum_max","polars.Expr.cum_min","polars.Expr.cum_sum","polars.Expr.dot","polars.Expr.drop_nulls","polars.Expr.dt","polars.Expr.exclude","polars.Expr.explode","polars.Expr.fill_none","polars.Expr.filter","polars.Expr.first","polars.Expr.forward_fill","polars.Expr.hash","polars.Expr.head","polars.Expr.is_between","polars.Expr.is_duplicated","polars.Expr.is_finite","polars.Expr.is_first","polars.Expr.is_in","polars.Expr.is_infinite","polars.Expr.is_nan","polars.Expr.is_not","polars.Expr.is_not_nan","polars.Expr.is_not_null","polars.Expr.is_null","polars.Expr.is_unique","polars.Expr.keep_name","polars.Expr.last","polars.Expr.list","polars.Expr.map","polars.Expr.max","polars.Expr.mean","polars.Expr.median","polars.Expr.min","polars.Expr.mode","polars.Expr.n_unique","polars.Expr.over","polars.Expr.pow","polars.Expr.quantile","polars.Expr.reinterpret","polars.Expr.repeat_by","polars.Expr.reverse","polars.Expr.round","polars.Expr.shift","polars.Expr.shift_and_fill","polars.Expr.slice","polars.Expr.sort","polars.Expr.sort_by","polars.Expr.std","polars.Expr.str","polars.Expr.sum","polars.Expr.tail","polars.Expr.take","polars.Expr.take_every","polars.Expr.unique","polars.Expr.var","polars.LazyFrame.cache","polars.LazyFrame.collect","polars.LazyFrame.describe_optimized_plan","polars.LazyFrame.describe_plan","polars.LazyFrame.drop_column","polars.LazyFrame.drop_columns","polars.LazyFrame.drop_duplicates","polars.LazyFrame.drop_nulls","polars.LazyFrame.explode","polars.LazyFrame.fetch","polars.LazyFrame.fill_none","polars.LazyFrame.filter","polars.LazyFrame.first","polars.LazyFrame.groupby","polars.LazyFrame.head","polars.LazyFrame.join","polars.LazyFrame.last","polars.LazyFrame.limit","polars.LazyFrame.map","polars.LazyFrame.max","polars.LazyFrame.mean","polars.LazyFrame.median","polars.LazyFrame.melt","polars.LazyFrame.min","polars.LazyFrame.pipe","polars.LazyFrame.quantile","polars.LazyFrame.reverse","polars.LazyFrame.select","polars.LazyFrame.shift","polars.LazyFrame.shift_and_fill","polars.LazyFrame.show_graph","polars.LazyFrame.slice","polars.LazyFrame.sort","polars.LazyFrame.std","polars.LazyFrame.sum","polars.LazyFrame.tail","polars.LazyFrame.var","polars.LazyFrame.with_column","polars.LazyFrame.with_column_renamed","polars.LazyFrame.with_columns","polars.Series","polars.Series.append","polars.Series.apply","polars.Series.arg_max","polars.Series.arg_min","polars.Series.arg_sort","polars.Series.arg_true","polars.Series.arg_unique","polars.Series.argsort","polars.Series.cast","polars.Series.chunk_lengths","polars.Series.clone","polars.Series.cum_max","polars.Series.cum_min","polars.Series.cum_sum","polars.Series.describe","polars.Series.dot","polars.Series.drop_nulls","polars.Series.dt","polars.Series.dtype","polars.Series.explode","polars.Series.fill_none","polars.Series.filter","polars.Series.hash","polars.Series.head","polars.Series.is_boolean","polars.Series.is_duplicated","polars.Series.is_finite","polars.Series.is_first","polars.Series.is_float","polars.Series.is_in","polars.Series.is_infinite","polars.Series.is_nan","polars.Series.is_not_nan","polars.Series.is_not_null","polars.Series.is_null","polars.Series.is_numeric","polars.Series.is_unique","polars.Series.is_utf8","polars.Series.len","polars.Series.limit","polars.Series.max","polars.Series.mean","polars.Series.median","polars.Series.min","polars.Series.mode","polars.Series.n_chunks","polars.Series.n_unique","polars.Series.name","polars.Series.null_count","polars.Series.peak_max","polars.Series.peak_min","polars.Series.quantile","polars.Series.rechunk","polars.Series.reinterpret","polars.Series.rename","polars.Series.rolling_max","polars.Series.rolling_mean","polars.Series.rolling_min","polars.Series.rolling_sum","polars.Series.round","polars.Series.sample","polars.Series.series_equal","polars.Series.set","polars.Series.set_at_idx","polars.Series.shape","polars.Series.shift","polars.Series.shrink_to_fit","polars.Series.slice","polars.Series.sort","polars.Series.std","polars.Series.str","polars.Series.sum","polars.Series.tail","polars.Series.take","polars.Series.take_every","polars.Series.to_arrow","polars.Series.to_frame","polars.Series.to_list","polars.Series.to_numpy","polars.Series.unique","polars.Series.value_counts","polars.Series.var","polars.Series.view","polars.Series.zip_with","polars.StringCache","polars.all","polars.any","polars.arange","polars.arg_where","polars.argsort_by","polars.avg","polars.col","polars.concat","polars.concat_str","polars.count","polars.cov","polars.eager.frame.GroupBy.agg","polars.eager.frame.GroupBy.agg_list","polars.eager.frame.GroupBy.apply","polars.eager.frame.GroupBy.count","polars.eager.frame.GroupBy.first","polars.eager.frame.GroupBy.get_group","polars.eager.frame.GroupBy.groups","polars.eager.frame.GroupBy.head","polars.eager.frame.GroupBy.last","polars.eager.frame.GroupBy.max","polars.eager.frame.GroupBy.mean","polars.eager.frame.GroupBy.median","polars.eager.frame.GroupBy.min","polars.eager.frame.GroupBy.n_unique","polars.eager.frame.GroupBy.pivot","polars.eager.frame.GroupBy.quantile","polars.eager.frame.GroupBy.select","polars.eager.frame.GroupBy.select_all","polars.eager.frame.GroupBy.sum","polars.eager.frame.GroupBy.tail","polars.eager.frame.PivotOps.count","polars.eager.frame.PivotOps.first","polars.eager.frame.PivotOps.max","polars.eager.frame.PivotOps.mean","polars.eager.frame.PivotOps.median","polars.eager.frame.PivotOps.min","polars.eager.frame.PivotOps.sum","polars.eager.series.DateTimeNameSpace.day","polars.eager.series.DateTimeNameSpace.hour","polars.eager.series.DateTimeNameSpace.max","polars.eager.series.DateTimeNameSpace.mean","polars.eager.series.DateTimeNameSpace.median","polars.eager.series.DateTimeNameSpace.min","polars.eager.series.DateTimeNameSpace.minute","polars.eager.series.DateTimeNameSpace.month","polars.eager.series.DateTimeNameSpace.nanosecond","polars.eager.series.DateTimeNameSpace.ordinal_day","polars.eager.series.DateTimeNameSpace.round","polars.eager.series.DateTimeNameSpace.second","polars.eager.series.DateTimeNameSpace.strftime","polars.eager.series.DateTimeNameSpace.timestamp","polars.eager.series.DateTimeNameSpace.to_python_datetime","polars.eager.series.DateTimeNameSpace.week","polars.eager.series.DateTimeNameSpace.weekday","polars.eager.series.DateTimeNameSpace.year","polars.eager.series.StringNameSpace.contains","polars.eager.series.StringNameSpace.json_path_match","polars.eager.series.StringNameSpace.lengths","polars.eager.series.StringNameSpace.lstrip","polars.eager.series.StringNameSpace.replace","polars.eager.series.StringNameSpace.replace_all","polars.eager.series.StringNameSpace.rstrip","polars.eager.series.StringNameSpace.slice","polars.eager.series.StringNameSpace.strptime","polars.eager.series.StringNameSpace.to_lowercase","polars.eager.series.StringNameSpace.to_uppercase","polars.first","polars.fold","polars.from_arrow","polars.from_dict","polars.from_pandas","polars.from_records","polars.get_dummies","polars.groups","polars.head","polars.last","polars.lazy.expr.ExprDateTimeNameSpace.day","polars.lazy.expr.ExprDateTimeNameSpace.hour","polars.lazy.expr.ExprDateTimeNameSpace.minute","polars.lazy.expr.ExprDateTimeNameSpace.month","polars.lazy.expr.ExprDateTimeNameSpace.nanosecond","polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day","polars.lazy.expr.ExprDateTimeNameSpace.round","polars.lazy.expr.ExprDateTimeNameSpace.second","polars.lazy.expr.ExprDateTimeNameSpace.strftime","polars.lazy.expr.ExprDateTimeNameSpace.year","polars.lazy.expr.ExprStringNameSpace.contains","polars.lazy.expr.ExprStringNameSpace.json_path_match","polars.lazy.expr.ExprStringNameSpace.lengths","polars.lazy.expr.ExprStringNameSpace.replace","polars.lazy.expr.ExprStringNameSpace.replace_all","polars.lazy.expr.ExprStringNameSpace.slice","polars.lazy.expr.ExprStringNameSpace.strptime","polars.lazy.expr.ExprStringNameSpace.to_lowercase","polars.lazy.expr.ExprStringNameSpace.to_uppercase","polars.lazy.frame.LazyGroupBy.agg","polars.lazy.frame.LazyGroupBy.apply","polars.lazy.frame.LazyGroupBy.head","polars.lazy.frame.LazyGroupBy.tail","polars.lit","polars.lit_date","polars.map_binary","polars.max","polars.mean","polars.median","polars.min","polars.n_unique","polars.pearson_corr","polars.quantile","polars.read_csv","polars.read_ipc","polars.read_json","polars.read_parquet","polars.read_sql","polars.repeat","polars.scan_csv","polars.scan_parquet","polars.std","polars.sum","polars.tail","polars.to_list","polars.toggle_string_cache","polars.var","polars.when","DataFrame","Expressions","Functions","API reference","Input/output","LazyFrame","Series"],titleterms:{"boolean":386,"function":387,"var":[64,133,170,256,383],agg:[271,356],agg_group:70,agg_list:272,aggreg:[385,386,390,391],alia:71,all:260,ani:261,api:388,append:175,appli:[2,72,176,273,357,385,386,390],arang:262,arg_max:177,arg_min:178,arg_sort:[73,179],arg_tru:180,arg_uniqu:[74,181],arg_wher:263,argsort:182,argsort_bi:264,attribut:[385,386,391],avg:265,backward_fil:75,cach:134,cast:[76,183],chunk_length:184,clone:[3,185],col:266,collect:135,column:[4,386],comput:[385,386,391],concat:267,concat_str:268,config:387,constructor:[385,386,391],contain:[316,347],convers:[385,387,391],count:[77,269,274,291],cov:270,csv:389,cum_max:[78,186],cum_min:[79,187],cum_sum:[80,188],dai:[298,337],datafram:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,385],datetimenamespac:[298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],describ:[5,189],describe_optimized_plan:136,describe_plan:137,descript:[385,390,391],dot:[81,190],downsampl:6,drop:7,drop_column:[138,139],drop_dupl:[8,140],drop_in_plac:9,drop_nul:[10,82,141,191],dt:[83,192],dtype:[11,193],eager:[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,387],exclud:84,explod:[12,85,142,194],expr:[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],exprdatetimenamespac:[337,338,339,340,341,342,343,344,345,346],express:[386,387],exprstringnamespac:[347,348,349,350,351,352,353,354,355],feather:389,fetch:143,fill_non:[13,86,144,195],filter:[14,87,145,196],first:[88,146,275,292,327],fold:[15,328],forward_fil:89,frame:[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,356,357,358,359],frame_equ:16,from_arrow:329,from_dict:330,from_panda:331,from_record:332,get_column:17,get_dummi:333,get_group:276,group:[277,334],groupbi:[18,147,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,385,390],hash:[90,197],hash_row:19,head:[20,91,148,198,278,335,358],height:21,hour:[299,338],hstack:22,input:389,insert_at_idx:23,ipc:389,is_between:92,is_boolean:199,is_dupl:[24,93,200],is_finit:[94,201],is_first:[95,202],is_float:203,is_in:[96,204],is_infinit:[97,205],is_nan:[98,206],is_not:99,is_not_nan:[100,207],is_not_nul:[101,208],is_nul:[102,209],is_numer:210,is_uniqu:[25,103,211],is_utf8:212,join:[26,149],json:389,json_path_match:[317,348],keep_nam:104,last:[105,150,279,336],lazi:[27,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],lazyfram:[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,390],lazygroupbi:[356,357,358,359],len:213,length:[318,349],limit:[28,151,214],list:106,lit:360,lit_dat:361,lstrip:319,manipul:[385,386,390,391],map:[107,152],map_binari:362,max:[29,108,153,215,280,293,300,363],mean:[30,109,154,216,281,294,301,364],median:[31,110,155,217,282,295,302,365],melt:[32,156],min:[33,111,157,218,283,296,303,366],minut:[304,339],mode:[112,219],month:[305,340],n_chunk:[34,220],n_uniqu:[113,221,284,367],name:[222,386],nanosecond:[306,341],null_count:[35,223],ordinal_dai:[307,342],output:389,over:114,parquet:389,peak_max:224,peak_min:225,pearson_corr:368,pipe:[36,158],pivot:[285,385],pivotop:[291,292,293,294,295,296,297],polar:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],pow:115,quantil:[37,116,159,226,286,369],read_csv:370,read_ipc:371,read_json:372,read_parquet:373,read_sql:374,rechunk:[38,227],refer:388,reinterpret:[117,228],renam:[39,229],repeat:375,repeat_bi:118,replac:[40,320,350],replace_al:[321,351],replace_at_idx:41,revers:[119,160],rolling_max:230,rolling_mean:231,rolling_min:232,rolling_sum:233,round:[120,234,308,343],row:[42,43],rstrip:322,sampl:[44,235],scan_csv:376,scan_parquet:377,second:[309,344],select:[45,161,287,385,386,390,391],select_al:288,select_at_idx:46,seri:[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,391],series_equ:236,set:237,set_at_idx:238,shape:[47,239],shift:[48,121,162,240],shift_and_fil:[49,122,163],show_graph:164,shrink_to_fit:[50,241],slice:[51,123,165,242,323,352],sort:[52,124,166,243],sort_bi:125,sql:389,stat:[385,390,391],std:[53,126,167,244,378],str:[127,245],strftime:[310,345],string:[386,391],stringcach:259,stringnamespac:[316,317,318,319,320,321,322,323,324,325,326],strptime:[324,353],sum:[54,128,168,246,289,297,379],tail:[55,129,169,247,290,359,380],take:[130,248],take_everi:[131,249],timeseri:[386,391],timestamp:311,to_arrow:[56,250],to_csv:57,to_dummi:58,to_fram:251,to_ipc:59,to_json:60,to_list:[252,381],to_lowercas:[325,354],to_numpi:[61,253],to_panda:62,to_parquet:63,to_python_datetim:312,to_uppercas:[326,355],toggle_string_cach:382,uniqu:[132,254],value_count:255,variou:[385,390,391],view:257,vstack:65,week:313,weekdai:314,when:384,width:66,window:386,with_column:[67,68,171,173],with_column_renam:172,year:[315,346],zip_with:258}})